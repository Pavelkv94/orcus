{"version":3,"sources":["components/MainWindow/MainWindow.module.css","App.module.css","components/MenuBar/MenuBar.module.css","components/Login/Login.module.css","components/MainWindow/Admin/Admin.module.css","components/HeaderNavBar/HeaderNavBar.tsx","api/api.ts","redux/appReducer.ts","redux/filterReducer.ts","components/MenuBar/MenuBar.tsx","Preloder.tsx","components/MainWindow/MainWindow.tsx","redux/categoriesReducer.ts","components/Login/Login.tsx","redux/postsReducer.ts","components/MainWindow/Admin/AdminForm/AdminForm.tsx","components/MainWindow/Admin/Admin.tsx","App.tsx","reportWebVitals.ts","redux/store.ts","index.tsx","components/MainWindow/Admin/AdminForm/AdminForm.module.css"],"names":["module","exports","HeaderNavBar","React","memo","theme","mode","defaultSelectedKeys","className","s","menu","Item","to","pathname","Headers","append","instance","axios","create","baseURL","API","title","post","get","category","text","id","initialState","status","error","isAuth","setAppStatusAC","type","getPostTC","dispatch","then","res","data","setPostAC","catch","err","console","log","MenuBar","useDispatch","posts","useSelector","state","categories","menuBar","subMenuCloseDelay","map","c","icon","DingtalkOutlined","p","onClick","_id","Preloader","tip","size","MainWindow","useParams","app","useEffect","filter","mainWindow","mde","backTop","Login","useState","auth","setAuth","login","name","labelCol","span","wrapperCol","initialValues","remember","onFinish","values","onFinishFailed","errorInfo","autoComplete","label","rules","required","message","Password","offset","htmlType","Option","Select","loadSuggestions","a","Promise","accept","reject","setTimeout","suggestions","preview","value","i","toLowerCase","includes","converter","Showdown","tables","simplifiedAutoLink","strikethrough","tasklists","AdminForm","setTitle","dropValue","setDropValue","setText","selectedTab","setSelectedTab","newCategory","setNewCategory","isSuccess","setSuccess","form","fields","postsFields","htmlFor","onChange","e","currentTarget","style","width","categoryFields","addCategory","disabled","href","target","rel","shape","danger","createArea","minEditorHeight","minPreviewHeight","onTabChange","generateMarkdownPreview","markdown","resolve","makeHtml","childProps","writeButton","tabIndex","btn","createPostsTC","Admin","adminContainer","Header","Layout","Content","Sider","App","collapsed","setCollapse","setCategoriesAC","setPostsAC","collapsible","onCollapse","padding","margin","minHeight","exact","path","render","image","Empty","PRESENTED_IMAGE_SIMPLE","height","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","action","store","createStore","applyMiddleware","thunk","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.c3664062.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainWindow\":\"MainWindow_mainWindow__nKQQg\",\"backTop\":\"MainWindow_backTop__1xoHy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"App_preloader__1bkES\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ant-menu-submenu-title\":\"MenuBar_ant-menu-submenu-title__3ofyN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"Login_login__2Px22\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"adminContainer\":\"Admin_adminContainer__3tgww\"};","import { Menu } from 'antd';\nimport React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport s from './HeaderNavBar.module.css'\n\nexport const HeaderNavBar = React.memo(() => {\n\n\treturn (\n\t\t<div>\n\t\t\t<Menu theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={['1']} className={s.menu} >\n\t\t\t\t<Menu.Item><NavLink to={{ pathname: `/admin` }} >ADMIN</NavLink></Menu.Item>\n\t\t\t</Menu>\n\t\t</div>\n\t)\n})","import axios from 'axios'\n\nlet h = new Headers();\nh.append(\"Content-Type\", \"application/json\");\nconst instance = axios.create({\n\tbaseURL: \"https://orcuserver.herokuapp.com\",\n});\n\nexport const API = {\n\tcreateCategory(title: any) {\n\t\treturn instance.post('/categories', { title: title })\n\t},\n\tgetCategories() {\n\t\treturn instance.get('/categories')\n\t},\n\tcreatePost(title: string, category: string, text: string) {\n\t\treturn instance.post('/posts', { title, category, text })\n\t},\n\tgetPosts() {\n\t\treturn instance.get('/posts')\n\t},\n\tgetPost(id: string) {\n\t\treturn instance.get(`main/${id}`)\n\t},\n\taddPostToCategory(post: string, category: string) {\n\t\treturn instance.put('/categories', { newPost: post, category })\n\t}\n\n}","\ntype ActionType = any\n\nexport type RequestStatusType = 'idle' | 'loading' | 'succeeded' | 'failed';\n\nconst initialState = {\n\tstatus: 'idle' as RequestStatusType,\n\terror: null as string | null,\n\tisAuth: false\n};\n\nexport type InitialStateType = typeof initialState\nexport function appReducer(state: InitialStateType = initialState, action: ActionType): InitialStateType {\n\n\tswitch (action.type) {\n\t\tcase \"SET-CATEGORIES\":\n\t\t\treturn action.categories\n\t\tcase \"SET-APP-STATUS\":\n\t\t\treturn { ...state, status: action.status }\n\n\t\tdefault: return state\n\t}\n}\n\nexport const setAppStatusAC = (status: RequestStatusType) => {\n\treturn {\n\t\ttype: \"SET-APP-STATUS\",\n\t\tstatus\n\t}\n}","import { API } from '../api/api';\nimport { setAppStatusAC } from './appReducer';\nimport { PostType } from './postsReducer';\ntype ActionType = any\n\nconst initialState = {} as PostType\n\nexport type InitialStateType = typeof initialState\nexport function filterReducer(state: InitialStateType = initialState, action: ActionType): InitialStateType {\n\n\tswitch (action.type) {\n\t\n\t\tcase \"SET-POST\":\n\t\t\treturn action.post\n\n\t\tdefault: return state\n\t}\n}\n\nexport function setPostAC(post: PostType) {\n\treturn {\n\t\ttype: \"SET-POST\",\n\t\tpost\n\t} as const\n}\n\nexport const getPostTC = (id: string) => (dispatch: any) => {\n\tdispatch(setAppStatusAC('loading'))\n\tAPI.getPost(id)\n\t\t.then(res => {\n\t\t\tconst post = res.data[0];\n\t\t\tdispatch(setPostAC(post))\n\t\t\tdispatch(setAppStatusAC('succeeded'))\n\t\t})\n\t\t.catch(err => console.log(err))\n}","import { NavLink } from 'react-router-dom';\nimport { Menu } from 'antd';\nimport s from \"./MenuBar.module.css\"\nimport { DingtalkOutlined } from '@ant-design/icons';\nimport { useSelector } from 'react-redux';\nimport { AppStateType } from \"../../redux/store\";\nimport { PostType } from \"../../redux/postsReducer\";\nimport SubMenu from \"antd/lib/menu/SubMenu\";\nimport { useDispatch } from 'react-redux';\nimport { getPostTC } from '../../redux/filterReducer';\nimport React from 'react';\nimport { CategoryType } from '../../redux/categoriesReducer';\n\nexport const MenuBar = React.memo(() => {\n\tconst dispatch = useDispatch();\n\tconst posts = useSelector<AppStateType, Array<PostType>>(state => state.posts);\n\tconst categories = useSelector<AppStateType, Array<CategoryType>>(state => state.categories);\n\n\treturn (\n\t\t<div>\n\t\t\t<Menu\n\t\t\t\tclassName={s.menuBar}\n\t\t\t\ttheme=\"dark\"\n\t\t\t\tmode=\"inline\"\n\t\t\t\tdefaultSelectedKeys={['1']}\n\t\t\t\tsubMenuCloseDelay={2}\n\t\t\t>\n\t\t\t\t{categories?.map(c =>\n\t\t\t\t\t<SubMenu key={c._id} icon={<DingtalkOutlined />} title={c.title} >\n\t\t\t\t\t\t{posts?.map(p => p.category === c.title && <Menu.Item key={p._id} onClick={() => dispatch(getPostTC(p._id))}><NavLink to={`/main/${p._id}`}> {p.title}</NavLink> </Menu.Item>)}\n\t\t\t\t\t</SubMenu>)}\n\t\t\t</Menu>\n\t\t</div>\n\t)\n})","import { Spin } from \"antd\"\nimport './App.module.css';\n\nexport const Preloader = () => {\n\treturn (\n\t\t<div className='preloader'>\n\t\t\t<Spin tip=\"Loading...\" size=\"large\">\n\t\t\t</Spin>\n\t\t</div>\n\t)\n}","import s from \"./MainWindow.module.css\"\nimport { useSelector } from 'react-redux';\nimport { AppStateType } from \"../../redux/store\";\nimport { PostType } from \"../../redux/postsReducer\";\nimport ReactMarkdown from 'react-markdown'\nimport { BackTop } from \"antd\";\nimport { Redirect, useParams } from 'react-router';\nimport { useDispatch } from 'react-redux';\nimport React, { useEffect } from \"react\";\nimport { getPostTC } from \"../../redux/filterReducer\";\nimport { Preloader } from \"../../Preloder\";\nimport { RequestStatusType } from \"../../redux/appReducer\";\n\nexport const MainWindow = React.memo(() => {\n\tconst { id } = useParams<{ id: string }>();\n\tconst dispatch = useDispatch();\n\tconst status = useSelector<AppStateType, RequestStatusType>(state => state.app.status);\n\tuseEffect(() => { dispatch(getPostTC(id)) }, [dispatch, id])\n\tconst post = useSelector<AppStateType, PostType>(state => state.filter);\n\tconst isAuth = useSelector<AppStateType, boolean>(state => state.app.isAuth);\n\tif (isAuth) {\n\t\treturn <Redirect to=\"/login\" />\n\t}\n\tif (status === \"loading\") { return <Preloader /> }\n\treturn (\n\n\t\t<div className={s.mainWindow}>\n\t\t\t<ReactMarkdown\n\t\t\t\tclassName={s.mde}\n\t\t\t>{post?.text}</ReactMarkdown>\n\t\t\t<BackTop>\n\t\t\t\t<div className={s.backTop}>UP</div>\n\t\t\t</BackTop>\n\t\t</div>\n\t)\n})","import { API } from \"../api/api\"\nimport { setAppStatusAC } from \"./appReducer\"\n\ntype ActionType = any\n\nexport type CategoryType = {\n\ttitle: string\n\tposts: [string]\n\t__v: number\n\t_id: string\n}\nconst initialState: Array<CategoryType> = []\n\nexport type InitialStateType = typeof initialState\nexport function categoriesReducer(state: InitialStateType = initialState, action: ActionType): InitialStateType {\n\n\tswitch (action.type) {\n\t\tcase \"SET-CATEGORIES\":\n\t\t\treturn action.categories\n\t\tcase \"ADD-CATEGORIES\":\n\t\t\treturn [...state, action.category]\n\t\tdefault: return state\n\t}\n}\n\nexport function setCategoriesAC(categories: any) {\n\treturn {\n\t\ttype: \"SET-CATEGORIES\",\n\t\tcategories\n\t} as const\n}\nexport function addCategoriesAC(category: CategoryType) {\n\treturn {\n\t\ttype: \"ADD-CATEGORIES\",\n\t\tcategory\n\t} as const\n}\n\nexport const getCategoriesTC = () => (dispatch: any) => {\n\t// dispatch(setAppStatusAC('loading'))\n\tAPI.getCategories()\n\t\t.then(res => {\n\t\t\tconst categories = res.data;\n\t\t\tdispatch(setCategoriesAC(categories))\n\t\t\tdispatch(setAppStatusAC('succeeded'))\n\n\t\t})\n\t\t.catch(err => console.log(err))\n}\n\nexport const addCategoriesTC = (title: string) => (dispatch: any) => {\n\tdispatch(setAppStatusAC('loading'))\n\tAPI.createCategory(title)\n\t\t.then(res => {\n\t\t\tdispatch(setAppStatusAC('succeeded'))\n\t\t})\n\t\t.catch(err => console.log(\"err\"))\n}\n\n\n// export const addPostToCategoriesTC = (post: string, category: string) => (dispatch: any) => {\n// \tdispatch(setAppStatusAC('loading'))\n// \tAPI.addPostToCategory(post, category)\n// \t\t.then(res => {\n// \t\t\tdispatch(setAppStatusAC('succeeded'))\n// \t\t})\n// \t\t.catch(err => console.log(\"err\"))\n// }","import { AppStateType } from \"../../redux/store\"\nimport s from \"./Login.module.css\"\nimport { useSelector } from 'react-redux';\nimport { Redirect } from \"react-router\";\nimport { Form, Input, Button } from 'antd';\nimport React, { useState } from 'react';\n\nexport const Login = React.memo(() => {\n\n\tconst isAuth = useSelector<AppStateType, boolean>(state => state.app.isAuth);\n\tconst [auth, setAuth] = useState(isAuth);\n\tif (auth) {\n\t\treturn <Redirect to={\"/admin\"} />\n\t}\n\tconst onFinish = (values: any) => {\n\t\tconsole.log('Success:', values);\n\t\tsetAuth(true)\n\t};\n\n\tconst onFinishFailed = (errorInfo: any) => {\n\t\tconsole.log('Failed:', errorInfo);\n\t};\n\treturn (\n\t\t<div className={s.login}>\n\n\t\t\t<Form\n\t\t\t\tname=\"basic\"\n\t\t\t\tlabelCol={{ span: 8 }}\n\t\t\t\twrapperCol={{ span: 16 }}\n\t\t\t\tinitialValues={{ remember: true }}\n\t\t\t\tonFinish={onFinish}\n\t\t\t\tonFinishFailed={onFinishFailed}\n\t\t\t\tautoComplete=\"off\"\n\t\t\t>\n\t\t\t\t<Form.Item\n\t\t\t\t\tlabel=\"Username\"\n\t\t\t\t\tname=\"username\"\n\t\t\t\t\trules={[{ required: true, message: 'Please input your username!' }]}\n\t\t\t\t>\n\t\t\t\t\t<Input />\n\t\t\t\t</Form.Item>\n\n\t\t\t\t<Form.Item\n\t\t\t\t\tlabel=\"Password\"\n\t\t\t\t\tname=\"password\"\n\t\t\t\t\trules={[{ required: true, message: 'Please input your password!' }]}\n\t\t\t\t>\n\t\t\t\t\t<Input.Password />\n\t\t\t\t</Form.Item>\n\n\t\t\t\t<Form.Item wrapperCol={{ offset: 8, span: 16 }}>\n\t\t\t\t\t<Button type=\"primary\" htmlType=\"submit\">\n\t\t\t\t\t\tSubmit\n\t\t\t\t\t</Button>\n\t\t\t\t</Form.Item>\n\t\t\t</Form>\n\t\t</div>\n\t)\n})","import { API } from '../api/api';\nimport { setAppStatusAC } from './appReducer';\nexport type PostType = {\n\t_id: string\n\ttitle: string\n\ttext: string\n\tcategory: string\n\t__v: number\n}\ntype ActionType = any\nconst initialState = [] as Array<PostType>\nexport type InitialStateType = typeof initialState\nexport function postsReducer(state: InitialStateType = initialState, action: ActionType): InitialStateType {\n\n\tswitch (action.type) {\n\t\tcase \"SET-POSTS\":\n\t\t\treturn action.posts\n\t\tdefault: return state\n\t}\n}\n\nexport function setPostsAC(posts: any) {\n\treturn {\n\t\ttype: \"SET-POSTS\",\n\t\tposts\n\t} as const\n}\n\nexport const getPostsTC = () => (dispatch: any) => {\n\tdispatch(setAppStatusAC('loading'))\n\tAPI.getPosts()\n\t\t.then(res => {\n\t\t\tconst posts = res.data;\n\t\t\tdispatch(setPostsAC(posts))\n\t\t\tdispatch(setAppStatusAC('succeeded'))\n\t\t})\n\t\t.catch(err => console.log(err))\n}\n\nexport const createPostsTC = (title: string, category: string, text: string) => (dispatch: any) => {\n\tdispatch(setAppStatusAC('loading'))\n\tAPI.createPost(title, category, text)\n\t\t.then(res => {\n\t\t\tdispatch(setAppStatusAC('succeeded'))\n\n\t\t})\n\t\t.catch(err => console.log(err))\n}\n\n","import s from \"./AdminForm.module.css\"\nimport { Input, Button, Select, Result } from 'antd';\nimport ReactMde from \"react-mde\";\nimport React, { useState } from \"react\";\nimport { Suggestion } from \"react-mde\";\nimport * as Showdown from \"showdown\";\nimport \"react-mde/lib/styles/css/react-mde-all.css\";\nimport { API } from './../../../../api/api'\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { AppStateType } from \"../../../../redux/store\";\nimport { createPostsTC } from \"../../../../redux/postsReducer\";\n\nconst { Option } = Select;\nconst loadSuggestions = async (text: string) => {\n\treturn new Promise<Suggestion[]>((accept, reject) => {\n\t\tsetTimeout(() => {\n\t\t\tconst suggestions: Suggestion[] = [\n\t\t\t\t{\n\t\t\t\t\tpreview: \"Andre\",\n\t\t\t\t\tvalue: \"@andre\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tpreview: \"Angela\",\n\t\t\t\t\tvalue: \"@angela\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tpreview: \"David\",\n\t\t\t\t\tvalue: \"@david\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tpreview: \"Louise\",\n\t\t\t\t\tvalue: \"@louise\"\n\t\t\t\t}\n\t\t\t].filter(i => i.preview.toLowerCase().includes(text.toLowerCase()));\n\t\t\taccept(suggestions);\n\t\t}, 250);\n\t});\n};\n\nconst converter = new Showdown.Converter({\n\ttables: true,\n\tsimplifiedAutoLink: true,\n\tstrikethrough: true,\n\ttasklists: true\n});\n\nexport const AdminForm = React.memo(() => {\n\tconst categories = useSelector<AppStateType, Array<any>>(state => state.categories);\n\tconst dispatch = useDispatch();\n\n\tconst [title, setTitle] = useState<string>(\"\");\n\tconst [dropValue, setDropValue] = useState(\"\");\n\tconst [text, setText] = useState<string>(\"\");\n\n\tconst [selectedTab, setSelectedTab] = useState<\"write\" | \"preview\" | undefined>(\"write\");\n\tconst [newCategory, setNewCategory] = useState<string>(\"\");\n\tconst [isSuccess, setSuccess] = useState<boolean>(false);\n\n\tif (isSuccess === true) { setTimeout(() => { setSuccess(false) }, 5000) }\n\tfunction handleChange(value: any) {\n\t\tsetDropValue(value)\n\t}\n\n\tconst addCategory = () => {\n\t\tAPI.createCategory(newCategory)\n\t\tsetNewCategory('')\n\t}\n\n\treturn (\n\t\t<div className={s.form}>\n\t\t\t<div className={s.fields}>\n\t\t\t\t<div className={s.postsFields}>\n\t\t\t\t\t<label htmlFor=\"title\">Title: </label>\n\t\t\t\t\t<Input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tname=\"title\"\n\t\t\t\t\t\tautoComplete=\"off\"\n\t\t\t\t\t\tvalue={title}\n\t\t\t\t\t\tonChange={(e) => { setTitle(e.currentTarget.value) }}\n\t\t\t\t\t/>\n\t\t\t\t\t<label htmlFor=\"dropdown\">Categories:</label>\n\t\t\t\t\t<Select style={{ width: 380 }} onChange={handleChange} value={dropValue}>\n\t\t\t\t\t\t{categories.map(c => <Option key={c._id} value={c.title}>{c.title}</Option>)}\n\t\t\t\t\t</Select>\n\t\t\t\t</div>\n\t\t\t\t<div className={s.categoryFields}>\n\t\t\t\t\t<label htmlFor=\"category\">Add category:</label>\n\t\t\t\t\t<div className={s.addCategory}>\n\n\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tname=\"category\"\n\t\t\t\t\t\t\tautoComplete=\"off\"\n\t\t\t\t\t\t\tvalue={newCategory}\n\t\t\t\t\t\t\tonChange={(e) => { setNewCategory(e.currentTarget.value) }}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Button type=\"dashed\" onClick={addCategory} disabled={newCategory ? false : true}>ADD</Button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\n\t\t\t<a href=\"https://stackedit.io/app#\" target=\"_blank\" rel=\"noreferrer\" style={{width: \"200px\"}}><Button shape='round' danger> MarkDown Editor</Button></a>\n\n\t\t\t<div className={s.createArea}>\n\t\t\t\t<ReactMde\n\t\t\t\t\tminEditorHeight={500}\n\t\t\t\t\tminPreviewHeight={600}\n\t\t\t\t\tvalue={text}\n\t\t\t\t\tonChange={setText}\n\t\t\t\t\tselectedTab={selectedTab}\n\t\t\t\t\tonTabChange={setSelectedTab}\n\t\t\t\t\tgenerateMarkdownPreview={(markdown) =>\n\t\t\t\t\t\tPromise.resolve(converter.makeHtml(markdown))\n\t\t\t\t\t}\n\t\t\t\t\tloadSuggestions={loadSuggestions}\n\t\t\t\t\tchildProps={{\n\t\t\t\t\t\twriteButton: {\n\t\t\t\t\t\t\ttabIndex: -1,\n\t\t\t\t\t\t},\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div className={s.btn}>\n\t\t\t\t<Button\n\t\t\t\t\ttype=\"primary\"\n\t\t\t\t\tsize=\"large\"\n\t\t\t\t\tonClick={() => { dispatch(createPostsTC(title, dropValue, text)); setSuccess(true); setTitle(\"\"); setDropValue(\"\"); setText(\"\") }}\n\t\t\t\t\tdisabled={title === \"\" || dropValue === \"\" || text === \"\" ? true : false}\n\t\t\t\t>CREATE NEW POST</Button>\n\t\t\t</div>\n\t\t\t{isSuccess && <Result status=\"success\"\n\t\t\t\ttitle=\"Post Is Created!!!\" />}\n\t\t\t<hr />\n\t\t</div>\n\t)\n})","import s from \"./Admin.module.css\"\nimport \"react-mde/lib/styles/css/react-mde-all.css\";\nimport { AdminForm } from \"./AdminForm/AdminForm\";\nimport { Preloader } from \"../../../Preloder\";\nimport { useSelector } from 'react-redux';\nimport { AppStateType } from \"../../../redux/store\";\nimport { RequestStatusType } from \"../../../redux/appReducer\";\nimport { Redirect } from \"react-router\";\nimport React from \"react\";\n\nexport const Admin = React.memo(() => {\n\n\tconst status = useSelector<AppStateType, RequestStatusType>(state => state.app.status);\n\tconst isAuth = useSelector<AppStateType, boolean>(state => state.app.isAuth);\n\n\tif (isAuth) {\n\t\treturn <Redirect to=\"/login\" />\n\t}\n\treturn (<>\n\t\t{status === \"loading\" && <Preloader />}\n\t\t<div className={s.adminContainer}>\n\t\t\t<AdminForm />\n\t\t\t<hr />\n\t\t</div></>\n\t)\n\n})","import './App.module.css';\nimport 'antd/dist/antd.css';\nimport { Route, Switch } from 'react-router-dom';\nimport { Empty, Layout } from 'antd';\nimport { HeaderNavBar } from './components/HeaderNavBar/HeaderNavBar';\nimport { MenuBar } from './components/MenuBar/MenuBar';\nimport { MainWindow } from './components/MainWindow/MainWindow';\nimport { useEffect } from 'react';\nimport { getCategoriesTC } from './redux/categoriesReducer';\nimport { useDispatch } from 'react-redux';\nimport { Login } from './components/Login/Login';\nimport { Admin } from './components/MainWindow/Admin/Admin';\nimport { getPostsTC } from './redux/postsReducer';\nimport { useState } from 'react';\nconst { Header, Content, Sider } = Layout;\n\n\nfunction App() {\n\tconst dispatch = useDispatch();\n\tconst [collapsed, setCollapse] = useState(false);\n\n\tuseEffect(() => {\n\t\tdispatch(getCategoriesTC())\n\t}, [dispatch]);\n\n\n\tuseEffect(() => {\n\t\tdispatch(getPostsTC())\n\t}, [dispatch]);\n\n\treturn (\n\n\t\t<Layout>\n\t\t\t<Header>\n\t\t\t\t<HeaderNavBar />\n\t\t\t</Header>\n\t\t\t<Layout >\n\t\t\t\t<Sider width={200} className=\"site-layout-background\" collapsed={collapsed}  collapsible onCollapse={() => setCollapse(!collapsed)}>\n\t\t\t\t\t<MenuBar />\n\n\t\t\t\t</Sider>\n\t\t\t\t<Layout style={{ padding: '0 24px 24px' }}>\n\n\t\t\t\t\t<Content\n\t\t\t\t\t\tclassName=\"site-layout-background\"\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tpadding: 24,\n\t\t\t\t\t\t\tmargin: 0,\n\t\t\t\t\t\t\tminHeight: 280,\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Switch>\n\t\t\t\t\t\t\t<Route exact path=\"/main/:id?\" render={() => <MainWindow />} />\n\t\t\t\t\t\t\t<Route exact path=\"/admin\" render={() => <Admin />} />\n\t\t\t\t\t\t\t<Route render={() => <Login />} path=\"/login\" />\n\t\t\t\t\t\t\t<Route render={() => <Empty image={Empty.PRESENTED_IMAGE_SIMPLE} style={{ height: \"90vh\" }} />} path=\"*\" />\n\n\t\t\t\t\t\t</Switch>\n\t\t\t\t\t</Content>\n\t\t\t\t</Layout>\n\t\t\t</Layout>\n\t\t</Layout>\n\n\t);\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { applyMiddleware, combineReducers, createStore } from \"redux\";\nimport { categoriesReducer } from \"./categoriesReducer\";\nimport { postsReducer } from \"./postsReducer\";\nimport thunk from 'redux-thunk';\nimport { appReducer } from './appReducer';\nimport { filterReducer } from './filterReducer';\n\nconst rootReducer = combineReducers({\n    categories: categoriesReducer,\n\tposts: postsReducer,\n\tfilter: filterReducer,\n\tapp: appReducer\n\n});\n\nexport const store = createStore(rootReducer, applyMiddleware(thunk));\n\nexport type AppStateType = ReturnType<typeof rootReducer>","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport { store } from './redux/store'\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<BrowserRouter>\n\t\t\t<App />\n\t\t</BrowserRouter>\n\t</Provider>,\n\n\tdocument.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"AdminForm_form__uj-lA\",\"fields\":\"AdminForm_fields__3yaux\",\"postsFields\":\"AdminForm_postsFields__2YPAC\",\"categoryFields\":\"AdminForm_categoryFields__3t7Q8\",\"addCategory\":\"AdminForm_addCategory__3TF29\",\"createArea\":\"AdminForm_createArea__2u8_m\",\"btn\":\"AdminForm_btn__2S7st\"};"],"sourceRoot":""}