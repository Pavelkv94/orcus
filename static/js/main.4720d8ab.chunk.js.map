{"version":3,"sources":["components/MainWindow/MainWindow.module.css","components/HeaderNavBar/HeaderNavBar.module.css","components/MainWindow/Greeting/Greeting.module.css","App.module.css","components/MenuBar/MenuBar.module.css","components/MainWindow/Admin/Admin.module.css","api/api.ts","redux/appReducer.ts","components/HeaderNavBar/HeaderNavBar.tsx","redux/filterReducer.ts","components/MenuBar/MenuBar.tsx","Preloder.tsx","components/MainWindow/MainWindow.tsx","components/Login/Login.tsx","redux/postsReducer.ts","components/MainWindow/Admin/AdminForm/Modal.tsx","components/MainWindow/Admin/AdminForm/AdminForm.tsx","components/MainWindow/Admin/Admin.tsx","redux/categoriesReducer.ts","components/MainWindow/Greeting/Greeting.tsx","App.tsx","reportWebVitals.ts","redux/store.ts","index.tsx","components/Login/Login.module.css","components/MainWindow/Admin/AdminForm/AdminForm.module.css"],"names":["module","exports","expandHeaders","a","Authorization","localStorage","getItem","baseUrl","url","instance","get","headers","params","axios","put","data","post","delete","API","title","category","text","id","payload","username","initialState","status","error","info","isAuth","user","role","setAppStatusAC","type","setAppErrAC","err","HeaderNavBar","React","memo","dispatch","useDispatch","useSelector","state","app","theme","mode","defaultSelectedKeys","className","s","menu","Item","style","position","right","onClick","removeItem","LogoutOutlined","marginRight","to","pathname","width","disabled","icon","UserOutlined","setPostAC","getPostTC","then","res","catch","console","log","MenuBar","posts","shortPosts","categories","menuBar","subMenuCloseDelay","map","c","DingtalkOutlined","p","index","_id","Math","random","Preloader","tip","size","MainWindow","useParams","useEffect","filter","mainWindow","mde","children","backTop","Login","initialRegData","password","useState","isModalVisible","setIsModalVisible","regData","setRegData","undefined","message","success","infoMessage","onFinish","values","Object","keys","includes","setItem","token","e","response","handleOk","handleCancel","login","default","margin","value","prefix","KeyOutlined","name","labelCol","span","wrapperCol","initialValues","remember","onFinishFailed","errorInfo","autoComplete","field","label","rules","required","Password","loginActions","htmlType","visible","onOk","onCancel","footer","registerField","onChange","currentTarget","getShortPostsTC","CloseModal","setVisible","callback","confirmLoading","setConfirmLoading","setTimeout","Panel","Collapse","Option","Select","loadSuggestions","Promise","accept","reject","suggestions","preview","i","toLowerCase","converter","Showdown","tables","simplifiedAutoLink","strikethrough","tasklists","AdminForm","setTitle","dropValue","setDropValue","setText","allPosts","setAllPosts","editMode","setEditMode","tempId","setTempId","selectedTab","setSelectedTab","newCategory","setNewCategory","notification","placement","editPost","saveChanges","editPostsTC","form","fields","postsFields","htmlFor","categoryFields","addCategory","topActions","href","target","rel","shape","danger","content","trigger","color","borderColor","navigator","clipboard","writeText","createArea","minEditorHeight","minPreviewHeight","onTabChange","generateMarkdownPreview","markdown","resolve","makeHtml","childProps","writeButton","tabIndex","btn","createPostsTC","ghost","cat","header","float","deletePostModal","Admin","adminContainer","Greeting","setCategoriesAC","greet","warning","Header","Layout","Content","Sider","App","collapsed","setCollapse","meTC","collapsible","onCollapse","padding","minHeight","exact","path","render","image","Empty","PRESENTED_IMAGE_SIMPLE","height","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","action","sort","b","store","createStore","applyMiddleware","thunk","logger","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.4720d8ab.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainWindow\":\"MainWindow_mainWindow__nKQQg\",\"backTop\":\"MainWindow_backTop__1xoHy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"username\":\"HeaderNavBar_username__3l9e2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"greet\":\"Greeting_greet__337Fv\",\"warning\":\"Greeting_warning__38Axs\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"App_preloader__1bkES\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ant-menu-submenu-title\":\"MenuBar_ant-menu-submenu-title__3ofyN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"adminContainer\":\"Admin_adminContainer__3tgww\"};","import axios from \"axios\";\n\nconst expandHeaders = async () => ({\n    Authorization: `Bearer ${localStorage.getItem(\"token\")}`,\n});\n\n// const baseUrl = (url: string) => `http://localhost:3002${url}`;\nconst baseUrl = (url: string) => `https://orcusnode.herokuapp.com${url}`;\n\nconst newAPI = {\n    get: (url: string, headers: any = {}, params: any = {}) => {\n        return axios.get(url, {\n            headers,\n            params,\n        });\n    },\n    put(url: string, headers = {}, data = {}) {\n        return axios.put(url, data, {\n            headers,\n        });\n    },\n    post(url: string, headers = {}, data = {}) {\n        return axios.post(url, data, {\n            headers,\n        });\n    },\n    delete(url: string, headers = {}) {\n        return axios.delete(url, {\n            headers,\n        });\n    },\n};\n\nconst instance = newAPI;\nexport const API = {\n    async createCategory(title: any) {\n        return instance.post(baseUrl(\"/categories\"), await expandHeaders(), {\n            title: title,\n        });\n    },\n    async getCategories() {\n        return instance.get(baseUrl(\"/categories\"), await expandHeaders());\n    },\n    async createPost(title: string, category: string, text: string) {\n        return instance.post(baseUrl(\"/posts\"), await expandHeaders(), {\n            title,\n            category,\n            text,\n        });\n    },\n    async editPost(title: string, category: string, text: string, id: string) {\n        return instance.put(baseUrl(`/posts/${id}`), await expandHeaders(), {\n            title,\n            category,\n            text,\n        });\n    },\n    async deletePost(id: string) {\n        return instance.delete(baseUrl(`/posts/${id}`), await expandHeaders());\n    },\n    async getPosts() {\n        return instance.get(baseUrl(\"/posts\"), await expandHeaders());\n    },\n    async getShortPosts() {\n        return instance.get(baseUrl(\"/shortPosts\"), await expandHeaders());\n    },\n    async getPost(id: string) {\n        return instance.get(baseUrl(`/main/${id}`), await expandHeaders());\n    },\n    async addPostToCategory(post: string, category: string) {\n        return instance.put(baseUrl(\"/categories\"), await expandHeaders(), {\n            newPost: post,\n            category,\n        });\n    },\n    async login(payload: any) {\n        return instance.post(baseUrl(\"/auth/login\"), {}, payload);\n    },\n    async registration(payload: any) {\n        return instance.post(baseUrl(\"/auth/registration\"), {}, payload);\n    },\n    async me(username: string | null) {\n        return instance.get(\n            baseUrl(`/auth/me/${username}`),\n            await expandHeaders()\n        );\n    },\n};\n","import { API } from \"../api/api\";\n\nexport type RequestStatusType = \"idle\" | \"loading\" | \"succeeded\" | \"failed\";\n\ntype ActionType = any;\n\nconst initialState = {\n    status: \"idle\" as RequestStatusType,\n    error: null as string | null,\n    info: '',\n    isAuth: false,\n    user: {} as any,\n    role: \"\" as string,\n};\n\nexport type InitialStateType = typeof initialState;\nexport function appReducer(\n    state: InitialStateType = initialState,\n    action: ActionType\n): InitialStateType {\n    switch (action.type) {\n        case \"SET-APP-STATUS\":\n            return { ...state, status: action.status };\n        case \"SET-APP-AUTH\":\n            return { ...state, user: action.user, role: action.user.role[0] };\n        case \"SET-APP-ERR\":\n            return { ...state, error: action.err };\n        case \"SET_ME\":\n            return { ...state, isAuth: true };\n        case \"LOGOUT\":\n            return { ...state, isAuth: false };\n        case \"INFO\": {\n            return {...state, info: 'You registration is successful!'}\n        }\n        case \"SET_ME_DATA\":\n            return {\n                ...state,\n                role: action.payload.role,\n                user: { ...state.user, username: action.payload.username },\n            };\n\n        default:\n            return state;\n    }\n}\n\nexport const setAppStatusAC = (status: RequestStatusType) => {\n    return {\n        type: \"SET-APP-STATUS\",\n        status,\n    };\n};\n\nconst setAppErrAC = (err: string) => {\n    return {\n        type: \"SET-APP-ERR\",\n        err,\n    };\n};\n\nconst setAppAuthAC = (user?: any) => {\n    return {\n        type: \"SET-APP-AUTH\",\n        user,\n    };\n};\nconst meAC = () => ({\n    type: \"SET_ME\",\n});\nconst infoAC = () => ({\n    type: \"INFO\",\n});\nconst meDataAC = (payload: any) => ({\n    type: \"SET_ME_DATA\",\n    payload,\n});\n\nexport const logoutAC = () => ({\n    type: \"LOGOUT\",\n});\n\nexport const loginTC = (payload: any) => async (dispatch: any) => {\n    dispatch(setAppStatusAC(\"loading\"));\n    await API.login(payload)\n        .then((res) => {\n            dispatch(setAppAuthAC(res.data));\n            //@ts-ignore\n            localStorage.setItem(\"token\", res.data.token);\n            //@ts-ignore\n            localStorage.setItem(\"user\", res.data.username);\n            //@ts-ignore\n            localStorage.setItem(\"role\", res.data.role);\n        })\n        .then(() => {\n            dispatch(meAC());\n            dispatch(setAppStatusAC(\"succeeded\"));\n        })\n        .catch((e) =>\n            dispatch(\n                setAppErrAC(\n                    e.response\n                        ? e.response.data.message\n                        : \"Server is not available\"\n                )\n            )\n        );\n};\n\nexport const registrationTC = (payload: any) => (dispatch: any) => {\n    dispatch(setAppStatusAC(\"loading\"));\n    API.registration(payload)\n        .then((res) => {\n            dispatch(setAppStatusAC(\"succeeded\"));\n            dispatch(infoAC())\n        })\n        .catch((e) =>\n            dispatch(\n                setAppErrAC(\n                    e.response\n                        ? e.response.data.message\n                        : \"Server is not available\"\n                )\n            )\n        );\n};\n\nexport const meTC = (username: string | null) => (dispatch: any) => {\n    dispatch(setAppStatusAC(\"loading\"));\n\n    API.me(username)\n        .then((res) => {\n            dispatch(meAC());\n            console.log(res);\n            dispatch(meDataAC(res.data));\n            dispatch(setAppStatusAC(\"succeeded\"));\n        })\n        .catch((e) =>\n            dispatch(\n                setAppErrAC(\n                    e.response\n                        ? e.response.data.message\n                        : \"Server is not available\"\n                )\n            )\n        );\n};\n","import { LogoutOutlined, UserOutlined } from \"@ant-design/icons\";\nimport { Avatar, Menu } from \"antd\";\nimport React from \"react\";\nimport { NavLink } from \"react-router-dom\";\nimport s from \"./HeaderNavBar.module.css\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { AppStateType } from \"../../redux/store\";\nimport { logoutAC } from \"../../redux/appReducer\";\n\nexport const HeaderNavBar = React.memo(() => {\n    const dispatch = useDispatch();\n    const role = useSelector<AppStateType, string>((state) => state.app.role);\n    const username = useSelector<AppStateType, string>((state) => state.app.user.username);\n\n    const exit = () => {\n        dispatch(logoutAC());\n        localStorage.removeItem(\"token\");\n        localStorage.removeItem(\"user\");\n        localStorage.removeItem(\"role\");\n    };\n\n    return (\n        <div>\n            <Menu\n                theme=\"dark\"\n                mode=\"horizontal\"\n                defaultSelectedKeys={[\"0\"]}\n                className={s.menu}\n            >\n                <Menu.Item\n                    style={{ position: \"absolute\", right: \"10px\" }}\n                    onClick={exit}\n                >\n                    <LogoutOutlined style={{marginRight: '10px'}} />LOGOUT\n                </Menu.Item>\n                <Menu.Item>\n                    <NavLink to={{ pathname: `/` }}>Main</NavLink>\n                </Menu.Item>\n                <Menu.Item style={{ position: \"absolute\", right: \"140px\", width: '170px' }} disabled className={s.username}> <Avatar style={{marginRight: '10px'}} icon={<UserOutlined />} />{username}</Menu.Item>\n                {role === \"admin\" && \n                    <Menu.Item>\n                        <NavLink to={{ pathname: `/admin` }}>ADMIN</NavLink>\n                    </Menu.Item>\n                }\n            </Menu>\n        </div>\n    );\n});\n","import { API } from '../api/api';\nimport { setAppStatusAC } from './appReducer';\nimport { PostType } from './postsReducer';\ntype ActionType = any\n\nconst initialState = {} as PostType\n\nexport type InitialStateType = typeof initialState\nexport function filterReducer(state: InitialStateType = initialState, action: ActionType): InitialStateType {\n\n\tswitch (action.type) {\n\t\n\t\tcase \"SET-POST\":\n\t\t\treturn action.post\n\n\t\tdefault: return state\n\t}\n}\n\nexport function setPostAC(post: PostType) {\n\treturn {\n\t\ttype: \"SET-POST\",\n\t\tpost\n\t} as const\n}\n\nexport const getPostTC = (id: string) => async (dispatch: any) => {\n\tdispatch(setAppStatusAC('loading'))\n\tawait API.getPost(id)\n\t\t.then(res => {\n\t\t\tconst post = res.data[0];\n\t\t\tdispatch(setPostAC(post))\n\t\t\tdispatch(setAppStatusAC('succeeded'))\n\t\t})\n\t\t.catch(err => console.log(err))\n}","import { NavLink } from 'react-router-dom';\nimport { Menu } from 'antd';\nimport s from \"./MenuBar.module.css\"\nimport { DingtalkOutlined } from '@ant-design/icons';\nimport { useSelector } from 'react-redux';\nimport { AppStateType } from \"../../redux/store\";\nimport { ShortPostType } from \"../../redux/postsReducer\";\nimport SubMenu from \"antd/lib/menu/SubMenu\";\nimport { useDispatch } from 'react-redux';\nimport { getPostTC } from '../../redux/filterReducer';\nimport React from 'react';\nimport { CategoryType } from '../../redux/categoriesReducer';\n\nexport const MenuBar = React.memo(() => {\n\tconst dispatch = useDispatch();\n\tconst posts = useSelector<AppStateType, Array<ShortPostType>>(state => state.posts.shortPosts);\n\tconst categories = useSelector<AppStateType, Array<CategoryType>>(state => state.categories);\n\n\treturn (\n\t\t<div>\n\t\t\t<Menu\n\t\t\t\tclassName={s.menuBar}\n\t\t\t\ttheme=\"dark\"\n\t\t\t\tmode=\"inline\"\n\t\t\t\tsubMenuCloseDelay={2}\n\t\t\t>\n\t\t\t\t{categories?.map((c) =>\n\t\t\t\t\t<SubMenu key={Math.random()} icon={<DingtalkOutlined />} title={c.title} >\n\t\t\t\t\t\t{posts?.map((p, index) => \n\t\t\t\t\t\t\tp.category === c.title && <Menu.Item key={index} onClick={() => dispatch(getPostTC(p._id))}>\n\t\t\t\t\t\t\t\t<NavLink to={`/main/${p._id}`}> {p.title}</NavLink> \n\t\t\t\t\t\t\t\t</Menu.Item>)}\n\t\t\t\t\t</SubMenu>)}\n\t\t\t</Menu>\n\t\t</div>\n\t)\n})","import { Spin } from \"antd\"\nimport './App.module.css';\n\nexport const Preloader = () => {\n\treturn (\n\t\t<div className='preloader'>\n\t\t\t<Spin tip=\"Loading...\" size=\"large\">\n\t\t\t</Spin>\n\t\t</div>\n\t)\n}","import s from \"./MainWindow.module.css\"\nimport { useSelector } from 'react-redux';\nimport { AppStateType } from \"../../redux/store\";\nimport { PostType } from \"../../redux/postsReducer\";\nimport ReactMarkdown from 'react-markdown'\nimport { BackTop } from \"antd\";\nimport { Redirect, useParams } from 'react-router';\nimport { useDispatch } from 'react-redux';\nimport React, { useEffect } from \"react\";\nimport { getPostTC } from \"../../redux/filterReducer\";\nimport { Preloader } from \"../../Preloder\";\nimport { RequestStatusType } from \"../../redux/appReducer\";\n\nexport const MainWindow = React.memo(() => {\n\tconst { id } = useParams<{ id: string }>();\n\tconst dispatch = useDispatch();\n\tconst status = useSelector<AppStateType, RequestStatusType>(state => state.app.status);\n\t\n\tuseEffect(() => { dispatch(getPostTC(id)) }, [dispatch, id])\n\tconst post = useSelector<AppStateType, PostType>(state => state.filter);\n\tconst isAuth = useSelector<AppStateType, boolean>(state => state.app.isAuth);\n\n\t\n\tif (status === \"loading\") { return <Preloader /> }\n\tif (!isAuth) {\n\t\treturn <Redirect to=\"/login\" />\n\t} else {\n\treturn (\n\n\t\t<div className={s.mainWindow}>\n\t\t\t<ReactMarkdown\n\t\t\t\tclassName={s.mde} children={post?.text}/>\n\t\t\t {/* >{post?.text}</ReactMarkdown> */}\n\t\t\t<BackTop>\n\t\t\t\t<div className={s.backTop}>UP</div>\n\t\t\t</BackTop>\n\t\t</div>\n\t)}\n})","import { AppStateType } from \"../../redux/store\";\nimport s from \"./Login.module.css\";\nimport { useSelector } from \"react-redux\";\nimport { Redirect } from \"react-router\";\nimport {\n    Button,\n    Form,\n    Input,\n    message,\n    Modal,\n    Statistic,\n} from \"antd\";\nimport React, { useEffect, useState } from \"react\";\nimport {\n    loginTC,\n    registrationTC,\n    RequestStatusType,\n} from \"../../redux/appReducer\";\nimport { useDispatch } from \"react-redux\";\nimport { KeyOutlined, UserOutlined } from \"@ant-design/icons\";\n\nexport type CredentialsType = {\n    username: string;\n    password: string;\n};\n\nexport const Login = React.memo(() => {\n    const dispatch = useDispatch();\n    const initialRegData = { username: \"\", password: \"\" };\n    const [isModalVisible, setIsModalVisible] = useState(false);\n    const [regData, setRegData] = useState(initialRegData);\n    const info = useSelector<AppStateType, string | null>(\n        (state) => state.app.info\n    );\n    const error = useSelector<AppStateType, string | null>(\n        (state) => state.app.error\n    );\n    const status = useSelector<AppStateType, RequestStatusType>(\n        (state) => state.app.status\n    );\n\n    const errorMessage = (err: any) => {\n        message.error(err);\n    };\n\n    useEffect(() => {\n        error !== null && error !== undefined && errorMessage(error);\n    }, [error]);\n\n    const infoMessage = (info: any) => {\n        message.success(info);\n    };\n\n    useEffect(() => {\n        info !== null && info !== undefined && info !== '' && infoMessage(info);\n    }, [info]);\n\n    const isAuth = useSelector<AppStateType, boolean>(\n        (state) => state.app.isAuth\n    );\n\n    const onFinish = (values: any) => {\n        if (Object.keys(values).includes(\"username\")) {\n            dispatch(loginTC(values));\n        }\n    };\n\n    const onFinishFailed = (errorInfo: any) => {\n        console.log(\"Failed:\", errorInfo);\n    };\n\n    const showModal = () => {\n        setIsModalVisible(true);\n    };\n\n    const handleOk = () => {\n        dispatch(registrationTC(regData));\n        setRegData(initialRegData);\n        setIsModalVisible(false);\n    };\n\n    const handleCancel = () => {\n        setIsModalVisible(false);\n    };\n\n    if (isAuth && status === \"succeeded\") {\n        return <Redirect to={\"/\"} />;\n    } else {\n        return (\n            <div className={s.login}>\n                <div className={s.default} style={{margin: '0 140px 0 0'}}>\n                    <Statistic\n                        title=\"Default Username\"\n                        value={\"user\"}\n                        prefix={<UserOutlined />}\n                    />\n                    <Statistic title=\"Default Password\" value={\"user\"}   prefix={<KeyOutlined />}/>\n                </div>\n                <br />\n                <Form\n                    name=\"basic\"\n                    labelCol={{ span: 8 }}\n                    wrapperCol={{ span: 16 }}\n                    initialValues={{ remember: true }}\n                    onFinish={onFinish}\n                    onFinishFailed={onFinishFailed}\n                    autoComplete=\"off\"\n                    style={{margin: '0 200px 200px 0'}}\n                >\n                    <Form.Item\n                        className={s.field}\n                        label=\"Username\"\n                        name=\"username\"\n                        rules={[\n                            {\n                                required: true,\n                                message: \"Please input your username!\",\n                            },\n                        ]}\n                    >\n                        <Input prefix={<UserOutlined />} />\n                    </Form.Item>\n\n                    <Form.Item\n                        label=\"Password\"\n                        name=\"password\"\n                        rules={[\n                            {\n                                required: true,\n                                message: \"Please input your password!\",\n                            },\n                        ]}\n                    >\n                        <Input.Password />\n                    </Form.Item>\n                    <div className={s.loginActions}>\n                        <Button\n                            type=\"primary\"\n                            htmlType=\"submit\"\n                            onClick={onFinish}\n                        >\n                            Sign In\n                        </Button>\n                        <Button type=\"primary\" onClick={showModal}>\n                            Sign Up\n                        </Button>\n                    </div>\n                </Form>\n                <Modal\n                    title=\"New User Registration\"\n                    visible={isModalVisible}\n                    onOk={handleOk}\n                    onCancel={handleCancel}\n                    footer={[\n                        <Button key=\"cancel\" onClick={handleCancel}>\n                            Close\n                        </Button>,\n                        <Button\n                            key=\"ok\"\n                            onClick={handleOk}\n                            type=\"primary\"\n                            disabled={!regData.password || !regData.username}\n                        >\n                            Sign Up\n                        </Button>,\n                    ]}\n                >\n                    <div className={s.registerField}>\n                        <p>First name:</p>\n                        <Input />\n                    </div>\n                    <div className={s.registerField}>\n                        <p>Surname:</p>\n                        <Input />\n                    </div>\n                    <div className={s.registerField}>\n                        <p>Login name:</p>\n                        <Input\n                            value={regData.username}\n                            onChange={(e) =>\n                                setRegData({\n                                    ...regData,\n                                    username: e.currentTarget.value,\n                                })\n                            }\n                        />\n                    </div>\n                    <div className={s.registerField}>\n                        <p>Password</p>\n                        <Input.Password\n                            value={regData.password}\n                            onChange={(e) =>\n                                setRegData({\n                                    ...regData,\n                                    password: e.currentTarget.value,\n                                })\n                            }\n                        />\n                    </div>\n                </Modal>\n            </div>\n        );\n    }\n});\n","import { API } from '../api/api';\nimport { setAppStatusAC } from './appReducer';\nexport type PostType = {\n\t_id: string\n\ttitle: string\n\ttext: string\n\tcategory: string\n\t__v: number\n}\nexport type ShortPostType = {\n\t_id: string\n\ttitle: string\n\tcategory: string\n}\ntype ActionType = any\nconst initialState = {\n\tposts: [] as Array<PostType>,\n\tshortPosts: [] as Array<ShortPostType>\n}\nexport type InitialStateType = typeof initialState\nexport function postsReducer(state: InitialStateType = initialState, action: ActionType): InitialStateType {\n\n\tswitch (action.type) {\n\t\tcase \"SET-POSTS\":\n\t\t\treturn { ...state, posts: action.posts }\n\t\tcase \"SET-SHORT-POSTS\":\n\t\t\treturn { ...state, shortPosts: action.shortPosts.sort((a: ShortPostType, b: ShortPostType) => a.title > b.title ? 1 : -1) }\n\t\tdefault: return state\n\t}\n}\n\nexport function setPostsAC(posts: any) {\n\treturn {\n\t\ttype: \"SET-POSTS\",\n\t\tposts\n\t} as const\n}\n\nexport function setShortPostsAC(shortPosts: any) {\n\treturn {\n\t\ttype: \"SET-SHORT-POSTS\",\n\t\tshortPosts\n\t} as const\n}\n\n//unOptimazed\n/*const getPostsTC = () => (dispatch: any) => {\n\tdispatch(setAppStatusAC('loading'))\n\tAPI.getPosts()\n\t\t.then(res => {\n\t\t\tconst posts = res.data;\n\t\t\tdispatch(setPostsAC(posts))\n\t\t\tdispatch(setAppStatusAC('succeeded'))\n\t\t})\n\t\t.catch(err => console.log(err))\n}*/\n\nexport const getShortPostsTC = () => (dispatch: any) => {\n\tdispatch(setAppStatusAC('loading'))\n\tAPI.getShortPosts()\n\t\t.then(res => {\n\t\t\tconst posts = res.data;\n\t\t\tdispatch(setShortPostsAC(posts))\n\t\t\tdispatch(setAppStatusAC('succeeded'))\n\t\t})\n\t\t.catch(err => console.log(err))\n\tdispatch(setAppStatusAC('idle'))\n}\n\nexport const createPostsTC = (title: string, category: string, text: string) => (dispatch: any) => {\n\tdispatch(setAppStatusAC('loading'))\n\tAPI.createPost(title, category, text)\n\t\t.then(res => {\n\t\t\tdispatch(setAppStatusAC('succeeded'))\n\n\t\t})\n\t\t.catch(err => console.log(err))\n\tdispatch(setAppStatusAC('idle'))\n}\n\nexport const editPostsTC = (title: string, category: string, text: string, id: string) => (dispatch: any) => {\n\tdispatch(setAppStatusAC('loading'))\n\tAPI.editPost(title, category, text, id)\n\t\t.then(res => {\n\t\t\tdispatch(setAppStatusAC('succeeded'))\n\n\t\t})\n\t\t.catch(err => console.log(err))\n\tdispatch(setAppStatusAC('idle'))\n}\n\nexport const deletePostsTC = (id: string) => (dispatch: any) => {\n\tdispatch(setAppStatusAC('loading'))\n\tAPI.deletePost(id)\n\t\t.then(res => {\n\t\t\tdispatch(setAppStatusAC('succeeded'))\n\n\t\t})\n\t\t.catch(err => console.log(err))\n\tdispatch(setAppStatusAC('idle'))\n}","import React  from \"react\";\nimport { Modal } from 'antd';\n\nexport const CloseModal = ({ visible, setVisible, callback, title }: any) => {\n  \n  const [confirmLoading, setConfirmLoading] = React.useState(false);\n  //const [modalText, setModalText] = React.useState('Content of the modal');\n\n  //const showModal = () => {\n  //  setVisible(true);\n  //};\n\n  const handleOk = () => {\n    //setModalText('The modal will be closed after two seconds');\n\tcallback()\n    setConfirmLoading(true);\n    setTimeout(() => {\n      setVisible(false);\n      setConfirmLoading(false);\n    }, 2000);\n  };\n\n  const handleCancel = () => {\n    setVisible(false);\n  };\n\n  return (\n      <Modal\n        title=\"Delete This Post?\"\n        visible={visible}\n        onOk={handleOk}\n        confirmLoading={confirmLoading}\n        onCancel={handleCancel}\n      >\n\t\t<p>Are you sure you want to delete the <b>{title}</b>?</p>\n        <p>This action cannot be undone.</p>\n      </Modal>\n  );\n};","import s from \"./AdminForm.module.css\"\nimport { Input, Button, Select, Collapse, notification, Popover } from 'antd';\nimport ReactMde from \"react-mde\";\nimport React, { useEffect, useState } from \"react\";\nimport { Suggestion } from \"react-mde\";\nimport * as Showdown from \"showdown\";\nimport \"react-mde/lib/styles/css/react-mde-all.css\";\nimport { API } from './../../../../api/api'\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { AppStateType } from \"../../../../redux/store\";\nimport { createPostsTC, deletePostsTC, editPostsTC, getShortPostsTC, PostType, ShortPostType } from \"../../../../redux/postsReducer\";\nimport { getPostTC } from \"../../../../redux/filterReducer\";\nimport { RequestStatusType } from \"../../../../redux/appReducer\";\nimport { CloseModal } from \"./Modal\";\n\nconst { Panel } = Collapse;\n\nconst { Option } = Select;\nconst loadSuggestions = async (text: string) => {\n\treturn new Promise<Suggestion[]>((accept, reject) => {\n\t\tsetTimeout(() => {\n\t\t\tconst suggestions: Suggestion[] = [\n\t\t\t\t{\n\t\t\t\t\tpreview: \"Andre\",\n\t\t\t\t\tvalue: \"@andre\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tpreview: \"Angela\",\n\t\t\t\t\tvalue: \"@angela\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tpreview: \"David\",\n\t\t\t\t\tvalue: \"@david\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tpreview: \"Louise\",\n\t\t\t\t\tvalue: \"@louise\"\n\t\t\t\t}\n\t\t\t].filter(i => i.preview.toLowerCase().includes(text.toLowerCase()));\n\t\t\taccept(suggestions);\n\t\t}, 250);\n\t});\n};\n\nconst converter = new Showdown.Converter({\n\ttables: true,\n\tsimplifiedAutoLink: true,\n\tstrikethrough: true,\n\ttasklists: true\n});\n\nexport const AdminForm = React.memo(() => {\n\tconst categories = useSelector<AppStateType, Array<any>>(state => state.categories);\n\tconst posts = useSelector<AppStateType, Array<ShortPostType>>(state => state.posts.shortPosts);\n\tconst post = useSelector<AppStateType, PostType>(state => state.filter);\n\tconst status = useSelector<AppStateType, RequestStatusType>(state => state.app.status);\n\tconst dispatch = useDispatch();\n\n\tconst [title, setTitle] = useState<string>(\"\");\n\tconst [dropValue, setDropValue] = useState(\"\");\n\tconst [text, setText] = useState<string>(\"\");\n\tconst [allPosts, setAllPosts] = useState<boolean>(false);\n\tconst [editMode, setEditMode] = useState<boolean>(false);\n\tconst [visible, setVisible] = React.useState<boolean>(false);\n\tconst [tempId, setTempId] = React.useState<any>({});\n\n\tconst [selectedTab, setSelectedTab] = useState<\"write\" | \"preview\" | undefined>(\"write\");\n\tconst [newCategory, setNewCategory] = useState<string>(\"\");\n\n\tuseEffect(() => {\n\t\tallPosts && dispatch(getShortPostsTC());\n\t}, [dispatch, allPosts]);\n\n\tuseEffect(() => {\n\t\tstatus === 'succeeded' && notification.success({\n\t\t\tmessage: `SUCCESS!`,\n\t\t\tplacement: 'topRight'\n\t\t})\n\t\tstatus === 'failed' && notification.error({\n\t\t\tmessage: `FAILED!`,\n\t\t\tplacement: 'topRight'\n\t\t})\n\t}, [status])\n\n\tfunction handleChange(value: any) {\n\t\tsetDropValue(value)\n\t};\n\n\tconst addCategory = () => {\n\t\tAPI.createCategory(newCategory)\n\t\tsetNewCategory('')\n\t};\n\n\tconst createPost = () => { dispatch(createPostsTC(title, dropValue, text)); setTitle(\"\"); setDropValue(\"\"); setText(\"\"); dispatch(getShortPostsTC()); };\n\n\tconst editPost = (id: string) => { setEditMode(true); dispatch(getPostTC(id)); setTitle(post.title); setDropValue(post.category); setText(post.text); };\n\n\tconst deletePostModal = (id: string, title: string) => {setVisible(true); setTempId({ id: id, title: title})};\n\n\tconst deletePost = () => {dispatch(deletePostsTC(tempId.id)); dispatch(getShortPostsTC());};\n\n\tconst saveChanges = (id: string) => { dispatch(editPostsTC(title, dropValue, text, id)); setTitle(\"\"); setDropValue(\"\"); setText(\"\") };\n\n\treturn (\n\t\t<div className={s.form}>\n\t\t\t<div className={s.fields}>\n\t\t\t\t<div className={s.postsFields}>\n\t\t\t\t\t<label htmlFor=\"title\">Title: </label>\n\t\t\t\t\t<Input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tname=\"title\"\n\t\t\t\t\t\tautoComplete=\"off\"\n\t\t\t\t\t\tvalue={title}\n\t\t\t\t\t\tonChange={(e) => { setTitle(e.currentTarget.value) }}\n\t\t\t\t\t/>\n\t\t\t\t\t<label htmlFor=\"dropdown\">Categories:</label>\n\t\t\t\t\t<Select style={{ width: 380 }} onChange={handleChange} value={dropValue}>\n\t\t\t\t\t\t{categories.map(c => <Option key={c._id} value={c.title}>{c.title}</Option>)}\n\t\t\t\t\t</Select>\n\t\t\t\t</div>\n\t\t\t\t<div className={s.categoryFields}>\n\t\t\t\t\t<label htmlFor=\"category\">Add category:</label>\n\t\t\t\t\t<div className={s.addCategory}>\n\n\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tname=\"category\"\n\t\t\t\t\t\t\tautoComplete=\"off\"\n\t\t\t\t\t\t\tvalue={newCategory}\n\t\t\t\t\t\t\tonChange={(e) => { setNewCategory(e.currentTarget.value) }}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Button type=\"dashed\" onClick={addCategory} disabled={newCategory ? false : true}>ADD</Button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className={s.topActions}>\n\t\t\t\t<a href=\"https://stackedit.io/app#\" target=\"_blank\" rel=\"noreferrer\" style={{ width: \"200px\" }}><Button shape='round' danger>MarkDown Editor</Button></a>\n\t\t\t\t<Popover content='Copied!'\n\t\t\t\t\ttrigger='click'\n\t\t\t\t><Button shape='round' style={{ color: 'orange', borderColor: 'orange' }} onClick={() => navigator.clipboard.writeText(text)}>\n\t\t\t\t\t\tCOPY ALL TEXT\n\t\t\t\t\t</Button></Popover>\n\t\t\t</div>\n\t\t\t<div className={s.createArea}>\n\t\t\t\t<ReactMde\n\t\t\t\t\tminEditorHeight={500}\n\t\t\t\t\tminPreviewHeight={600}\n\t\t\t\t\tvalue={text}\n\t\t\t\t\tonChange={setText}\n\t\t\t\t\tselectedTab={selectedTab}\n\t\t\t\t\tonTabChange={setSelectedTab}\n\t\t\t\t\tgenerateMarkdownPreview={(markdown) =>\n\t\t\t\t\t\tPromise.resolve(converter.makeHtml(markdown))\n\t\t\t\t\t}\n\t\t\t\t\tloadSuggestions={loadSuggestions}\n\t\t\t\t\tchildProps={{\n\t\t\t\t\t\twriteButton: {\n\t\t\t\t\t\t\ttabIndex: -1,\n\t\t\t\t\t\t},\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div className={s.btn}>\n\t\t\t\t{editMode && <Button type=\"default\" size=\"large\" danger onClick={() => { setEditMode(false); setTitle(\"\"); setDropValue(\"\"); setText(\"\") }}>Cancel</Button>}\n\t\t\t\t<Button\n\t\t\t\t\ttype=\"primary\"\n\t\t\t\t\tsize=\"large\"\n\t\t\t\t\tonClick={!editMode ? createPost : () => saveChanges(post._id)}\n\t\t\t\t\tdisabled={title === \"\" || dropValue === \"\" || text === \"\" ? true : false}\n\t\t\t\t>{!editMode ? 'CREATE NEW POST' : 'SAVE CHANGES'}</Button>\n\n\t\t\t</div>\n\t\t\t<hr />\n\n\t\t\t{!allPosts ? <Button type=\"primary\" ghost onClick={() => setAllPosts(true)}>All Posts</Button>\n\t\t\t\t: <Button type=\"primary\" ghost onClick={() => setAllPosts(false)}>Close Posts List</Button>}\n\n\t\t\t{allPosts &&\n\t\t\t\t<Collapse>\n\t\t\t\t\t{categories.map(cat =>\n\t\t\t\t\t\t<Panel header={cat.title} key={cat._id}>\n\t\t\t\t\t\t\t{posts.map(post => post.category === cat.title &&\n\t\t\t\t\t\t\t\t<p key={post._id}>{post.title}\n\t\t\t\t\t\t\t\t\t<Button type=\"dashed\" style={{ color: 'green', margin: '0px 4px', float: 'right' }} onClick={() => editPost(post._id)}>Edit</Button>\n\t\t\t\t\t\t\t\t\t<Button type=\"dashed\" style={{ color: 'red', margin: '0px 4px', float: 'right' }} onClick={() => deletePostModal(post._id, post.title)}>Delete</Button>\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Panel>)}\n\t\t\t\t</Collapse>}\n\t\t\t\t<CloseModal visible={visible} setVisible={setVisible} callback={deletePost} title={tempId.title}/>\n\t\t</div>\n\t)\n})","import s from \"./Admin.module.css\"\nimport \"react-mde/lib/styles/css/react-mde-all.css\";\nimport { AdminForm } from \"./AdminForm/AdminForm\";\nimport { Preloader } from \"../../../Preloder\";\nimport { useSelector } from 'react-redux';\nimport { AppStateType } from \"../../../redux/store\";\nimport { RequestStatusType } from \"../../../redux/appReducer\";\nimport { Redirect } from \"react-router\";\nimport React from \"react\";\n\nexport const Admin = React.memo(() => {\n\n\tconst status = useSelector<AppStateType, RequestStatusType>(state => state.app.status);\n\tconst isAuth = useSelector<AppStateType, boolean>(state => state.app.isAuth);\n\n\tif (!isAuth) {\n\t\treturn <Redirect to=\"/login\" />\n\t} else {\n\t\treturn (<>\n\t\t\t{status === \"loading\" && <Preloader />}\n\t\t\t<div className={s.adminContainer}>\n\t\t\t\t<AdminForm />\n\t\t\t\t<hr />\n\t\t\t</div></>\n\t\t)\n\t}\n\n\n})","import { API } from \"../api/api\"\nimport { setAppStatusAC } from \"./appReducer\"\n\ntype ActionType = any\n\nexport type CategoryType = {\n\ttitle: string\n\tposts: [string]\n\t__v: number\n\t_id: string\n}\nconst initialState: Array<CategoryType> = []\n\nexport type InitialStateType = typeof initialState\nexport function categoriesReducer(state: InitialStateType = initialState, action: ActionType): InitialStateType {\n\n\tswitch (action.type) {\n\t\tcase \"SET-CATEGORIES\":\n\t\t\treturn action.categories.sort((a:CategoryType,b:CategoryType)=>a.title>b.title ? 1 : -1)\n\t\tcase \"ADD-CATEGORIES\":\n\t\t\treturn [...state, action.category]\n\t\tdefault: return state\n\t}\n}\n\nexport function setCategoriesAC(categories: any) {\n\treturn {\n\t\ttype: \"SET-CATEGORIES\",\n\t\tcategories\n\t} as const\n}\nexport function addCategoriesAC(category: CategoryType) {\n\treturn {\n\t\ttype: \"ADD-CATEGORIES\",\n\t\tcategory\n\t} as const\n}\n\nexport const getCategoriesTC = () => (dispatch: any) => {\n\t// dispatch(setAppStatusAC('loading'))\n\tAPI.getCategories()\n\t\t.then(res => {\n\t\t\tconst categories = res.data;\n\t\t\tdispatch(setCategoriesAC(categories))\n\t\t\tdispatch(setAppStatusAC('succeeded'))\n\n\t\t})\n\t\t.catch(err => console.log(err))\n}\n\nexport const addCategoriesTC = (title: string) => (dispatch: any) => {\n\tdispatch(setAppStatusAC('loading'))\n\tAPI.createCategory(title)\n\t\t.then(res => {\n\t\t\tdispatch(setAppStatusAC('succeeded'))\n\t\t})\n\t\t.catch(err => console.log(\"err\"))\n}\n\n\n// export const addPostToCategoriesTC = (post: string, category: string) => (dispatch: any) => {\n// \tdispatch(setAppStatusAC('loading'))\n// \tAPI.addPostToCategory(post, category)\n// \t\t.then(res => {\n// \t\t\tdispatch(setAppStatusAC('succeeded'))\n// \t\t})\n// \t\t.catch(err => console.log(\"err\"))\n// }","import { AppStateType } from \"../../../redux/store\"\nimport s from \"./Greeting.module.css\"\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Redirect } from \"react-router\";\nimport React, { useEffect } from 'react';\nimport { getCategoriesTC } from \"../../../redux/categoriesReducer\";\nimport { getShortPostsTC } from \"../../../redux/postsReducer\";\n\n\nexport const Greeting = React.memo(() => {\n\tconst isAuth = useSelector<AppStateType, boolean>(state => state.app.isAuth);\n\n\tconst dispatch = useDispatch();\n\tuseEffect(() => {\n\t\tdispatch(getCategoriesTC());\n\t}, [dispatch]);\n\n\n\tuseEffect(() => {\n\t\tdispatch(getShortPostsTC());\n\t}, [dispatch]);\n\n\tif (!isAuth) {\n\t\treturn <Redirect to={\"/login\"} />\n\t} else {\n\t\treturn (\n\t\t\t<div className={s.greet}>\n\t\t\t\t<div></div>\n\t\t\t\t<h2>Hello</h2>\n\t\t\t\t<h3>This is orcus app. Good luck!</h3>\n\t\t\t\t<div></div>\n\t\t\t\t<section className={s.warning}>\n\t\t\t\t\t<p>The developer of this application is not responsible for any consequences of its use.<br/> All materials are provided for educational purposes only!</p>\n\t\t\t\t\t<p>Разработчик данного приложения не несет ответственности за любые последствия его использования.<br/> Все материалы предоставлены исключительно в образовательных целях!</p>\n\t\t\t\t</section>\n\t\t\t</div>\n\t\t)\n\t}\n})","import \"./App.module.css\";\nimport \"antd/dist/antd.css\";\nimport { Route, Switch } from \"react-router-dom\";\nimport { Empty, Layout } from \"antd\";\nimport { HeaderNavBar } from \"./components/HeaderNavBar/HeaderNavBar\";\nimport { MenuBar } from \"./components/MenuBar/MenuBar\";\nimport { MainWindow } from \"./components/MainWindow/MainWindow\";\nimport { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { Login } from \"./components/Login/Login\";\nimport { Admin } from \"./components/MainWindow/Admin/Admin\";\nimport { useState } from \"react\";\nimport { Greeting } from \"./components/MainWindow/Greeting/Greeting\";\nimport { meTC } from \"./redux/appReducer\";\nconst { Header, Content, Sider } = Layout;\n\nfunction App() {\n    const dispatch = useDispatch();\n    const [collapsed, setCollapse] = useState(false);\n\n    useEffect(() => {\n        let username = localStorage.getItem(\"user\");\n        dispatch(meTC(username));\n    }, [dispatch]);\n\n    return (\n        <Layout>\n            <Header>\n                <HeaderNavBar />\n            </Header>\n            <Layout>\n                <Sider\n                    width={200}\n                    className=\"site-layout-background\"\n                    collapsed={collapsed}\n                    collapsible\n                    onCollapse={() => setCollapse(!collapsed)}\n                >\n                    <MenuBar />\n                </Sider>\n                <Layout>\n                    <Content\n                        className=\"site-layout-background\"\n                        style={{\n                            padding: 16,\n                            margin: 0,\n                            minHeight: 280,\n                        }}\n                    >\n                        <Switch>\n                            <Route\n                                exact\n                                path=\"/main/:id?\"\n                                render={() => <MainWindow />}\n                            />\n                            <Route\n                                exact\n                                path=\"/admin\"\n                                render={() => <Admin />}\n                            />\n                            <Route render={() => <Login />} path=\"/login\" />\n                            <Route render={() => <Greeting />} path=\"/\" />\n                            <Route\n                                render={() => (\n                                    <Empty\n                                        image={Empty.PRESENTED_IMAGE_SIMPLE}\n                                        style={{ height: \"90vh\" }}\n                                    />\n                                )}\n                                path=\"*\"\n                            />\n                        </Switch>\n                    </Content>\n                </Layout>\n            </Layout>\n        </Layout>\n    );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { logger } from 'redux-logger';\nimport { applyMiddleware, combineReducers, createStore } from \"redux\";\n\nimport { categoriesReducer } from \"./categoriesReducer\";\nimport { postsReducer } from \"./postsReducer\";\nimport thunk from 'redux-thunk';\nimport { appReducer } from './appReducer';\nimport { filterReducer } from './filterReducer';\n\nconst rootReducer = combineReducers({\n    categories: categoriesReducer,\n\tposts: postsReducer,\n\tfilter: filterReducer,\n\tapp: appReducer\n\n});\n\nexport const store = createStore(rootReducer, applyMiddleware(thunk, logger));\n\nexport type AppStateType = ReturnType<typeof rootReducer>","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport { store } from './redux/store'\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<BrowserRouter>\n\t\t\t<App />\n\t\t</BrowserRouter>\n\t</Provider>,\n\n\tdocument.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"Login_login__2Px22\",\"field\":\"Login_field__2H_jd\",\"loginActions\":\"Login_loginActions__pAvjF\",\"registerField\":\"Login_registerField__1KlcP\",\"default\":\"Login_default__2UxNA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"AdminForm_form__uj-lA\",\"fields\":\"AdminForm_fields__3yaux\",\"postsFields\":\"AdminForm_postsFields__2YPAC\",\"categoryFields\":\"AdminForm_categoryFields__3t7Q8\",\"addCategory\":\"AdminForm_addCategory__3TF29\",\"createArea\":\"AdminForm_createArea__2u8_m\",\"btn\":\"AdminForm_btn__2S7st\",\"topActions\":\"AdminForm_topActions__2LNlC\"};"],"sourceRoot":""}