{"version":3,"sources":["components/MainWindow/MainWindow.module.css","App.module.css","components/MenuBar/MenuBar.module.css","components/Login/Login.module.css","components/MainWindow/Admin/Admin.module.css","components/MainWindow/Greeting/Greeting.module.css","redux/appReducer.ts","components/HeaderNavBar/HeaderNavBar.tsx","api/api.ts","redux/filterReducer.ts","components/MenuBar/MenuBar.tsx","Preloder.tsx","components/MainWindow/MainWindow.tsx","redux/categoriesReducer.ts","components/Login/Login.tsx","redux/postsReducer.ts","components/MainWindow/Admin/AdminForm/AdminForm.tsx","components/MainWindow/Admin/Admin.tsx","components/MainWindow/Greeting/Greeting.tsx","App.tsx","reportWebVitals.ts","redux/store.ts","index.tsx","components/MainWindow/Admin/AdminForm/AdminForm.module.css"],"names":["module","exports","initialState","status","error","isAuth","setAppStatusAC","type","setAppAuthAC","auth","HeaderNavBar","React","memo","dispatch","useDispatch","theme","mode","defaultSelectedKeys","className","s","menu","Item","style","position","right","onClick","LogoutOutlined","to","pathname","Headers","append","instance","axios","create","baseURL","API","title","post","get","category","text","id","getPostTC","then","res","data","setPostAC","catch","err","console","log","MenuBar","posts","useSelector","state","shortPosts","categories","menuBar","subMenuCloseDelay","map","c","icon","DingtalkOutlined","p","_id","Preloader","tip","size","MainWindow","useParams","app","useEffect","filter","mainWindow","mde","children","backTop","Login","login","htmlType","Option","Select","loadSuggestions","a","Promise","accept","reject","setTimeout","suggestions","preview","value","i","toLowerCase","includes","converter","Showdown","tables","simplifiedAutoLink","strikethrough","tasklists","AdminForm","useState","setTitle","dropValue","setDropValue","setText","selectedTab","setSelectedTab","newCategory","setNewCategory","isSuccess","setSuccess","form","fields","postsFields","htmlFor","name","autoComplete","onChange","e","currentTarget","width","categoryFields","addCategory","disabled","href","target","rel","shape","danger","createArea","minEditorHeight","minPreviewHeight","onTabChange","generateMarkdownPreview","markdown","resolve","makeHtml","childProps","writeButton","tabIndex","btn","createPostsTC","Admin","adminContainer","Greeting","greet","Header","Layout","Content","Sider","App","collapsed","setCollapse","setCategoriesAC","collapsible","onCollapse","padding","margin","minHeight","exact","path","render","image","Empty","PRESENTED_IMAGE_SIMPLE","height","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","action","sort","b","store","createStore","applyMiddleware","thunk","ReactDOM","document","getElementById"],"mappings":"2FACAA,EAAOC,QAAU,CAAC,WAAa,+BAA+B,QAAU,8B,oBCAxED,EAAOC,QAAU,CAAC,UAAY,yB,0CCA9BD,EAAOC,QAAU,CAAC,yBAAyB,0C,oBCA3CD,EAAOC,QAAU,CAAC,MAAQ,uB,oBCA1BD,EAAOC,QAAU,CAAC,eAAiB,gC,oBCAnCD,EAAOC,QAAU,CAAC,MAAQ,0B,yNCGpBC,EAAe,CACpBC,OAAQ,OACRC,MAAO,KACPC,QAAQ,GAkBF,IAAMC,EAAiB,SAACH,GAC9B,MAAO,CACNI,KAAM,iBACNJ,WAIWK,EAAe,SAACC,GAC5B,MAAO,CACNF,KAAM,eACNE,S,OC1BWC,EAAeC,IAAMC,MAAK,WACtC,IAAMC,EAAWC,cAGjB,OACC,8BACC,eAAC,IAAD,CAAMC,MAAM,OAAOC,KAAK,aAAaC,oBAAqB,CAAC,KAAMC,UAAWC,IAAEC,KAA9E,UACC,cAAC,IAAKC,KAAN,CAAWC,MAAO,CAAEC,SAAU,WAAYC,MAAO,QAAUC,QALjD,WAAQZ,EAASL,GAAa,KAKxC,SAA0E,cAACkB,EAAA,EAAD,MAC1E,cAAC,IAAKL,KAAN,UAAW,cAAC,IAAD,CAASM,GAAI,CAAEC,SAAS,UAAxB,6B,gECfP,IAAIC,SACVC,OAAO,eAAgB,oBACzB,IAAMC,EAAWC,IAAMC,OAAO,CAC7BC,QAAS,qCAIGC,EAAM,SACHC,GACd,OAAOL,EAASM,KAAK,cAAe,CAAED,MAAOA,KAFlCD,EAAM,WAKjB,OAAOJ,EAASO,IAAI,gBALTH,EAAM,SAOPC,EAAeG,EAAkBC,GAC3C,OAAOT,EAASM,KAAK,SAAU,CAAED,QAAOG,WAAUC,UARvCL,EAAM,WAcjB,OAAOJ,EAASO,IAAI,gBAdTH,EAAM,SAgBVM,GACP,OAAOV,EAASO,IAAT,eAAqBG,KCrBxBvC,EAAe,GAqBd,IAAMwC,EAAY,SAACD,GAAD,OAAgB,SAAC5B,GACzCA,EAASP,EAAe,YACxB6B,EAAYM,GACVE,MAAK,SAAAC,GACL,IAAMP,EAAOO,EAAIC,KAAK,GACtBhC,EAZI,SAAmBwB,GACzB,MAAO,CACN9B,KAAM,WACN8B,QASUS,CAAUT,IACnBxB,EAASP,EAAe,iBAExByC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,QCrBfG,EAAUxC,IAAMC,MAAK,WACjC,IAAMC,EAAWC,cACXsC,EAAQC,aAAgD,SAAAC,GAAK,OAAIA,EAAMF,MAAMG,cAC7EC,EAAaH,aAA+C,SAAAC,GAAK,OAAIA,EAAME,cAEjF,OADAP,QAAQC,IAAIE,GAEX,8BACC,cAAC,IAAD,CACClC,UAAWC,IAAEsC,QACb1C,MAAM,OACNC,KAAK,SACLC,oBAAqB,CAAC,KACtByC,kBAAmB,EALpB,gBAOEF,QAPF,IAOEA,OAPF,EAOEA,EAAYG,KAAI,SAAAC,GAAC,OACjB,cAAC,IAAD,CAAqBC,KAAM,cAACC,EAAA,EAAD,IAAsB1B,MAAOwB,EAAExB,MAA1D,gBACEgB,QADF,IACEA,OADF,EACEA,EAAOO,KAAI,SAAAI,GAAC,OACZA,EAAExB,WAAaqB,EAAExB,OAAS,cAAC,IAAKf,KAAN,CAAuBI,QAAS,kBAAMZ,EAAS6B,EAAUqB,EAAEC,OAA3D,SACzB,eAAC,IAAD,CAASrC,GAAE,gBAAWoC,EAAEC,KAAxB,cAAiCD,EAAE3B,UADM2B,EAAEC,SAFhCJ,EAAEI,e,6CCzBRC,EAAY,WACxB,OACC,qBAAK/C,UAAU,YAAf,SACC,cAAC,IAAD,CAAMgD,IAAI,aAAaC,KAAK,aCOlBC,EAAazD,IAAMC,MAAK,WAAO,IACnC6B,EAAO4B,cAAP5B,GACF5B,EAAWC,cACXX,EAASkD,aAA6C,SAAAC,GAAK,OAAIA,EAAMgB,IAAInE,UAC/EoE,qBAAU,WAAQ1D,EAAS6B,EAAUD,MAAQ,CAAC5B,EAAU4B,IACxD,IAAMJ,EAAOgB,aAAoC,SAAAC,GAAK,OAAIA,EAAMkB,UAC1DnE,EAASgD,aAAmC,SAAAC,GAAK,OAAIA,EAAMgB,IAAIjE,UAGrE,MAAe,YAAXF,EAA+B,cAAC,EAAD,IAC9BE,EAKJ,sBAAKa,UAAWC,IAAEsD,WAAlB,UACC,cAAC,IAAD,CACCvD,UAAWC,IAAEuD,IAAKC,SAAQ,OAAEtC,QAAF,IAAEA,OAAF,EAAEA,EAAMG,OAEnC,cAAC,IAAD,UACC,qBAAKtB,UAAWC,IAAEyD,QAAlB,qBATK,cAAC,IAAD,CAAUjD,GAAG,c,QCbhBzB,EAAoC,GA2BnC,I,2BC7BM2E,EAAQlE,IAAMC,MAAK,WAC/B,IAAMC,EAAWC,cACXT,EAASgD,aAAmC,SAAAC,GAAK,OAAIA,EAAMgB,IAAIjE,UACrE4C,QAAQC,IAAI7C,GAUZ,OAAIA,EACI,cAAC,IAAD,CAAUsB,GAAI,MAGpB,qBAAKT,UAAWC,IAAE2D,MAAlB,SA4BC,cAAC,IAAD,CAAQvE,KAAK,UAAUwE,SAAS,SAAStD,QAxC3B,WAChBZ,EAASL,GAAa,KAuCpB,yB,2ICvCEN,GAAe,CACpBkD,MAAO,GACPG,WAAY,IA6Bb,IClCQyB,GAAWC,KAAXD,OACFE,GAAe,yCAAG,WAAO1C,GAAP,UAAA2C,EAAA,+EAChB,IAAIC,SAAsB,SAACC,EAAQC,GACzCC,YAAW,WACV,IAAMC,EAA4B,CACjC,CACCC,QAAS,QACTC,MAAO,UAER,CACCD,QAAS,SACTC,MAAO,WAER,CACCD,QAAS,QACTC,MAAO,UAER,CACCD,QAAS,SACTC,MAAO,YAEPlB,QAAO,SAAAmB,GAAC,OAAIA,EAAEF,QAAQG,cAAcC,SAASrD,EAAKoD,kBACpDP,EAAOG,KACL,SAtBmB,2CAAH,sDA0BfM,GAAY,IAAIC,aAAmB,CACxCC,QAAQ,EACRC,oBAAoB,EACpBC,eAAe,EACfC,WAAW,IAGCC,GAAYzF,IAAMC,MAAK,WACnC,IAAM4C,EAAaH,aAAsC,SAAAC,GAAK,OAAIA,EAAME,cAClE3C,EAAWC,cAFwB,EAIfuF,mBAAiB,IAJF,mBAIlCjE,EAJkC,KAI3BkE,EAJ2B,OAKPD,mBAAS,IALF,mBAKlCE,EALkC,KAKvBC,EALuB,OAMjBH,mBAAiB,IANA,mBAMlC7D,EANkC,KAM5BiE,EAN4B,OAQHJ,mBAA0C,SARvC,mBAQlCK,EARkC,KAQrBC,EARqB,OASHN,mBAAiB,IATd,mBASlCO,EATkC,KASrBC,EATqB,OAUTR,oBAAkB,GAVT,mBAUlCS,EAVkC,KAUvBC,EAVuB,MAYvB,IAAdD,GAAsBvB,YAAW,WAAQwB,GAAW,KAAU,KAUlE,OACC,sBAAK7F,UAAWC,KAAE6F,KAAlB,UACC,sBAAK9F,UAAWC,KAAE8F,OAAlB,UACC,sBAAK/F,UAAWC,KAAE+F,YAAlB,UACC,uBAAOC,QAAQ,QAAf,qBACA,cAAC,KAAD,CACC5G,KAAK,OACL6G,KAAK,QACLC,aAAa,MACb3B,MAAOtD,EACPkF,SAAU,SAACC,GAAQjB,EAASiB,EAAEC,cAAc9B,UAE7C,uBAAOyB,QAAQ,WAAf,yBACA,cAAC,KAAD,CAAQ7F,MAAO,CAAEmG,MAAO,KAAOH,SAtBnC,SAAsB5B,GACrBc,EAAad,IAqB6CA,MAAOa,EAA9D,SACE/C,EAAWG,KAAI,SAAAC,GAAC,OAAI,cAACoB,GAAD,CAAoBU,MAAO9B,EAAExB,MAA7B,SAAqCwB,EAAExB,OAA1BwB,EAAEI,aAGtC,sBAAK9C,UAAWC,KAAEuG,eAAlB,UACC,uBAAOP,QAAQ,WAAf,2BACA,sBAAKjG,UAAWC,KAAEwG,YAAlB,UAEC,cAAC,KAAD,CACCpH,KAAK,OACL6G,KAAK,WACLC,aAAa,MACb3B,MAAOkB,EACPU,SAAU,SAACC,GAAQV,EAAeU,EAAEC,cAAc9B,UAEnD,cAAC,IAAD,CAAQnF,KAAK,SAASkB,QAjCP,WACnBU,EAAmByE,GACnBC,EAAe,KA+BiCe,UAAUhB,EAAtD,0BAKH,mBAAGiB,KAAK,4BAA4BC,OAAO,SAASC,IAAI,aAAazG,MAAO,CAACmG,MAAO,SAApF,SAA8F,cAAC,IAAD,CAAQO,MAAM,QAAQC,QAAM,EAA5B,gCAE9F,qBAAK/G,UAAWC,KAAE+G,WAAlB,SACC,cAAC,KAAD,CACCC,gBAAiB,IACjBC,iBAAkB,IAClB1C,MAAOlD,EACP8E,SAAUb,EACVC,YAAaA,EACb2B,YAAa1B,EACb2B,wBAAyB,SAACC,GAAD,OACxBnD,QAAQoD,QAAQ1C,GAAU2C,SAASF,KAEpCrD,gBAAiBA,GACjBwD,WAAY,CACXC,YAAa,CACZC,UAAW,QAKf,qBAAK1H,UAAWC,KAAE0H,IAAlB,SACC,cAAC,IAAD,CACCtI,KAAK,UACL4D,KAAK,QACL1C,QAAS,WAAQZ,ED1DO,SAACuB,EAAeG,EAAkBC,GAAlC,OAAmD,SAAC3B,GAChFA,EAASP,EAAe,YACxB6B,EAAeC,EAAOG,EAAUC,GAC9BG,MAAK,SAAAC,GACL/B,EAASP,EAAe,iBAGxByC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,OCmDG8F,CAAc1G,EAAOmE,EAAW/D,IAAQuE,GAAW,GAAOT,EAAS,IAAKE,EAAa,IAAKC,EAAQ,KAC5HmB,SAAoB,KAAVxF,GAA8B,KAAdmE,GAA6B,KAAT/D,EAJ/C,+BAOAsE,GAAa,cAAC,KAAD,CAAQ3G,OAAO,UAC5BiC,MAAM,uBACP,6BC1HU2G,GAAQpI,IAAMC,MAAK,WAE/B,IAAMT,EAASkD,aAA6C,SAAAC,GAAK,OAAIA,EAAMgB,IAAInE,UAG/E,OAFekD,aAAmC,SAAAC,GAAK,OAAIA,EAAMgB,IAAIjE,UAK5D,qCACK,YAAXF,GAAwB,cAAC,EAAD,IACzB,sBAAKe,UAAWC,IAAE6H,eAAlB,UACC,cAAC5C,GAAD,IACA,6BANK,cAAC,IAAD,CAAUzE,GAAG,c,qBCTTsH,GAAWtI,IAAMC,MAAK,WAGlC,OAFeyC,aAAmC,SAAAC,GAAK,OAAIA,EAAMgB,IAAIjE,UAMnE,sBAAKa,UAAWC,KAAE+H,MAAlB,UACC,wBACA,uCACA,oDACA,2BAPK,cAAC,IAAD,CAAUvH,GAAI,cCIfwH,GAA2BC,IAA3BD,OAAQE,GAAmBD,IAAnBC,QAASC,GAAUF,IAAVE,MAqDVC,OAlDf,WACC,IAAM1I,EAAWC,cADH,EAEmBuF,oBAAS,GAF5B,mBAEPmD,EAFO,KAEIC,EAFJ,KAad,OATAlF,qBAAU,WACT1D,GNemC,SAACA,GAErCsB,IACEQ,MAAK,SAAAC,GACL,IAAMY,EAAaZ,EAAIC,KACvBhC,EAlBI,SAAyB2C,GAC/B,MAAO,CACNjD,KAAM,iBACNiD,cAeUkG,CAAgBlG,IACzB3C,EAASP,EAAe,iBAGxByC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,WMvBxB,CAACnC,IAGJ0D,qBAAU,WACT1D,GJ6BmC,SAACA,GACrCA,EAASP,EAAe,YACxB6B,IACEQ,MAAK,SAAAC,GACL,IAAMQ,EAAQR,EAAIC,KAClBhC,EAvBK,CACNN,KAAM,kBACNgD,WAqB0BH,IACzBvC,EAASP,EAAe,iBAExByC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,WIpCxB,CAACnC,IAIH,eAAC,IAAD,WACC,cAACsI,GAAD,UACC,cAACzI,EAAD,MAED,eAAC,IAAD,WACC,cAAC4I,GAAD,CAAO7B,MAAO,IAAKvG,UAAU,yBAAyBsI,UAAWA,EAAWG,aAAW,EAACC,WAAY,kBAAMH,GAAaD,IAAvH,SACC,cAACrG,EAAD,MAGD,cAAC,IAAD,CAAQ7B,MAAO,CAAEuI,QAAS,eAA1B,SAEC,cAACR,GAAD,CACCnI,UAAU,yBACVI,MAAO,CACNuI,QAAS,GACTC,OAAQ,EACRC,UAAW,KALb,SAQC,eAAC,IAAD,WACC,cAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,aAAaC,OAAQ,kBAAM,cAAC9F,EAAD,OAC7C,cAAC,IAAD,CAAO4F,OAAK,EAACC,KAAK,SAASC,OAAQ,kBAAM,cAACnB,GAAD,OACzC,cAAC,IAAD,CAAOmB,OAAQ,kBAAM,cAACrF,EAAD,KAAWoF,KAAK,WACrC,cAAC,IAAD,CAAOC,OAAQ,kBAAM,cAACjB,GAAD,KAAcgB,KAAK,MACxC,cAAC,IAAD,CAAOC,OAAQ,kBAAM,cAAC,IAAD,CAAOC,MAAOC,IAAMC,uBAAwB/I,MAAO,CAAEgJ,OAAQ,WAAcL,KAAK,oBC3C7FM,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqB9H,MAAK,YAAkD,IAA/C+H,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,O,oBCFRO,GAAcC,aAAgB,CAChCxH,WRMG,WAA0G,IAA/EF,EAA8E,uDAApDpD,EAAc+K,EAAsC,uCAE/G,OAAQA,EAAO1K,MACd,IAAK,iBACJ,OAAO0K,EAAOzH,WAAW0H,MAAK,SAAC/F,EAAegG,GAAhB,OAAiChG,EAAE/C,MAAM+I,EAAE/I,MAAQ,GAAK,KACvF,IAAK,iBACJ,MAAM,GAAN,mBAAWkB,GAAX,CAAkB2H,EAAO1I,WAC1B,QAAS,OAAOe,IQZjBF,MNWM,WAAqG,IAA/EE,EAA8E,uDAApDpD,GAAc+K,EAAsC,uCAE1G,OAAQA,EAAO1K,MACd,IAAK,YACJ,OAAO,2BAAK+C,GAAZ,IAAmBF,MAAO6H,EAAO7H,QAClC,IAAK,kBACJ,OAAO,2BAAKE,GAAZ,IAAmBC,WAAY0H,EAAO1H,WAAW2H,MAAK,SAAC/F,EAAgBgG,GAAjB,OAAmChG,EAAE/C,MAAM+I,EAAE/I,MAAQ,GAAK,OACjH,QAAS,OAAOkB,IMjBjBkB,OZFM,WAAsG,IAA/ElB,EAA8E,uDAApDpD,EAAc+K,EAAsC,uCAE3G,OAAQA,EAAO1K,MAEd,IAAK,WACJ,OAAO0K,EAAO5I,KAEf,QAAS,OAAOiB,IYJjBgB,IfAM,WAAmG,IAA/EhB,EAA8E,uDAApDpD,EAAc+K,EAAsC,uCAExG,OAAQA,EAAO1K,MACd,IAAK,iBACJ,OAAO0K,EAAOzH,WACf,IAAK,iBACJ,OAAO,2BAAKF,GAAZ,IAAmBnD,OAAQ8K,EAAO9K,SACnC,IAAK,eACJ,OAAO,2BAAKmD,GAAZ,IAAmBjD,OAAQ4K,EAAOxK,OAEnC,QAAS,OAAO6C,MeNL8H,GAAQC,aAAYN,GAAaO,aAAgBC,OCN9DC,IAAStB,OACR,cAAC,IAAD,CAAUkB,MAAOA,GAAjB,SACC,cAAC,IAAD,UACC,cAAC,GAAD,QAIFK,SAASC,eAAe,SAMzBnB,M,mBCrBAvK,EAAOC,QAAU,CAAC,KAAO,wBAAwB,OAAS,0BAA0B,YAAc,+BAA+B,eAAiB,kCAAkC,YAAc,+BAA+B,WAAa,8BAA8B,IAAM,0B","file":"static/js/main.cd56e103.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainWindow\":\"MainWindow_mainWindow__24YO7\",\"backTop\":\"MainWindow_backTop__5hNKB\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"App_preloader__20AE2\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ant-menu-submenu-title\":\"MenuBar_ant-menu-submenu-title__hgwk-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"Login_login__5WqZj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"adminContainer\":\"Admin_adminContainer__35A89\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"greet\":\"Greeting_greet__-CVu-\"};","type ActionType = any\r\n\r\nexport type RequestStatusType = 'idle' | 'loading' | 'succeeded' | 'failed';\r\n\r\nconst initialState = {\r\n\tstatus: 'idle' as RequestStatusType,\r\n\terror: null as string | null,\r\n\tisAuth: false\r\n};\r\n\r\nexport type InitialStateType = typeof initialState\r\nexport function appReducer(state: InitialStateType = initialState, action: ActionType): InitialStateType {\r\n\r\n\tswitch (action.type) {\r\n\t\tcase \"SET-CATEGORIES\":\r\n\t\t\treturn action.categories\r\n\t\tcase \"SET-APP-STATUS\":\r\n\t\t\treturn { ...state, status: action.status }\r\n\t\tcase \"SET-APP-AUTH\":\r\n\t\t\treturn { ...state, isAuth: action.auth }\r\n\r\n\t\tdefault: return state\r\n\t}\r\n}\r\n\r\nexport const setAppStatusAC = (status: RequestStatusType) => {\r\n\treturn {\r\n\t\ttype: \"SET-APP-STATUS\",\r\n\t\tstatus\r\n\t}\r\n}\r\n\r\nexport const setAppAuthAC = (auth: boolean) => {\r\n\treturn {\r\n\t\ttype: \"SET-APP-AUTH\",\r\n\t\tauth\r\n\t}\r\n}\r\n\r\n// export const loginTC = (pass: any) => (dispatch: any) => {\r\n//     // dispatch(setAppStatusAC({ status: 'loading' }))\r\n//     API.login(pass)\r\n//         .then(res => {\r\n//             if (res.data.pass === '200') {\r\n//                 dispatch(setAppAuthAC(true));\r\n//                 // dispatch(setAppStatusAC({ status: 'succeeded' }))\r\n//             } else {\r\n//                 // handleServerNetworkError(dispatch, res.data.messages[0])\r\n//             }\r\n//         })\r\n//         .catch((err: AxiosError) => {\r\n//             // handleServerNetworkError(dispatch, err.message)\r\n//         })\r\n// };","import { LogoutOutlined } from '@ant-design/icons';\r\nimport { Menu } from 'antd';\r\nimport React from 'react';\r\nimport { NavLink } from 'react-router-dom';\r\nimport s from './HeaderNavBar.module.css'\r\nimport { useDispatch } from 'react-redux';\r\nimport { setAppAuthAC } from '../../redux/appReducer';\r\n\r\n\r\nexport const HeaderNavBar = React.memo(() => {\r\n\tconst dispatch = useDispatch();\r\n\tconst exit = () => { dispatch(setAppAuthAC(false)) }\r\n\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Menu theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={['1']} className={s.menu} >\r\n\t\t\t\t<Menu.Item style={{ position: 'absolute', right: '10px' }} onClick={exit}><LogoutOutlined /></Menu.Item>\r\n\t\t\t\t<Menu.Item><NavLink to={{ pathname: `/admin` }} >ADMIN</NavLink></Menu.Item>\r\n\t\t\t</Menu>\r\n\t\t</div>\r\n\t)\r\n})","import axios from 'axios'\r\n\r\nlet h = new Headers();\r\nh.append(\"Content-Type\", \"application/json\");\r\nconst instance = axios.create({\r\n\tbaseURL: \"https://orcuserver.herokuapp.com\",\r\n\t// baseURL: \"http://localhost:3002\",\r\n});\r\n\r\nexport const API = {\r\n\tcreateCategory(title: any) {\r\n\t\treturn instance.post('/categories', { title: title })\r\n\t},\r\n\tgetCategories() {\r\n\t\treturn instance.get('/categories')\r\n\t},\r\n\tcreatePost(title: string, category: string, text: string) {\r\n\t\treturn instance.post('/posts', { title, category, text })\r\n\t},\r\n\tgetPosts() {\r\n\t\treturn instance.get('/posts')\r\n\t},\r\n\tgetShortPosts() {\r\n\t\treturn instance.get('/shortPosts')\r\n\t},\r\n\tgetPost(id: string) {\r\n\t\treturn instance.get(`main/${id}`)\r\n\t},\r\n\taddPostToCategory(post: string, category: string) {\r\n\t\treturn instance.put('/categories', { newPost: post, category })\r\n\t},\r\n\tlogin(pass: any) {\r\n        return instance.post('/auth', { pass });\r\n    },\r\n}","import { API } from '../api/api';\r\nimport { setAppStatusAC } from './appReducer';\r\nimport { PostType } from './postsReducer';\r\ntype ActionType = any\r\n\r\nconst initialState = {} as PostType\r\n\r\nexport type InitialStateType = typeof initialState\r\nexport function filterReducer(state: InitialStateType = initialState, action: ActionType): InitialStateType {\r\n\r\n\tswitch (action.type) {\r\n\t\r\n\t\tcase \"SET-POST\":\r\n\t\t\treturn action.post\r\n\r\n\t\tdefault: return state\r\n\t}\r\n}\r\n\r\nexport function setPostAC(post: PostType) {\r\n\treturn {\r\n\t\ttype: \"SET-POST\",\r\n\t\tpost\r\n\t} as const\r\n}\r\n\r\nexport const getPostTC = (id: string) => (dispatch: any) => {\r\n\tdispatch(setAppStatusAC('loading'))\r\n\tAPI.getPost(id)\r\n\t\t.then(res => {\r\n\t\t\tconst post = res.data[0];\r\n\t\t\tdispatch(setPostAC(post))\r\n\t\t\tdispatch(setAppStatusAC('succeeded'))\r\n\t\t})\r\n\t\t.catch(err => console.log(err))\r\n}","import { NavLink } from 'react-router-dom';\r\nimport { Menu } from 'antd';\r\nimport s from \"./MenuBar.module.css\"\r\nimport { DingtalkOutlined } from '@ant-design/icons';\r\nimport { useSelector } from 'react-redux';\r\nimport { AppStateType } from \"../../redux/store\";\r\nimport { ShortPostType } from \"../../redux/postsReducer\";\r\nimport SubMenu from \"antd/lib/menu/SubMenu\";\r\nimport { useDispatch } from 'react-redux';\r\nimport { getPostTC } from '../../redux/filterReducer';\r\nimport React from 'react';\r\nimport { CategoryType } from '../../redux/categoriesReducer';\r\n\r\nexport const MenuBar = React.memo(() => {\r\n\tconst dispatch = useDispatch();\r\n\tconst posts = useSelector<AppStateType, Array<ShortPostType>>(state => state.posts.shortPosts);\r\n\tconst categories = useSelector<AppStateType, Array<CategoryType>>(state => state.categories);\r\n\tconsole.log(posts)\r\n\treturn (\r\n\t\t<div>\r\n\t\t\t<Menu\r\n\t\t\t\tclassName={s.menuBar}\r\n\t\t\t\ttheme=\"dark\"\r\n\t\t\t\tmode=\"inline\"\r\n\t\t\t\tdefaultSelectedKeys={['1']}\r\n\t\t\t\tsubMenuCloseDelay={2}\r\n\t\t\t>\r\n\t\t\t\t{categories?.map(c =>\r\n\t\t\t\t\t<SubMenu key={c._id} icon={<DingtalkOutlined />} title={c.title} >\r\n\t\t\t\t\t\t{posts?.map(p => \r\n\t\t\t\t\t\t\tp.category === c.title && <Menu.Item key={p._id} onClick={() => dispatch(getPostTC(p._id))}>\r\n\t\t\t\t\t\t\t\t<NavLink to={`/main/${p._id}`}> {p.title}</NavLink> \r\n\t\t\t\t\t\t\t\t</Menu.Item>)}\r\n\t\t\t\t\t</SubMenu>)}\r\n\t\t\t</Menu>\r\n\t\t</div>\r\n\t)\r\n})","import { Spin } from \"antd\"\r\nimport './App.module.css';\r\n\r\nexport const Preloader = () => {\r\n\treturn (\r\n\t\t<div className='preloader'>\r\n\t\t\t<Spin tip=\"Loading...\" size=\"large\">\r\n\t\t\t</Spin>\r\n\t\t</div>\r\n\t)\r\n}","import s from \"./MainWindow.module.css\"\r\nimport { useSelector } from 'react-redux';\r\nimport { AppStateType } from \"../../redux/store\";\r\nimport { PostType } from \"../../redux/postsReducer\";\r\nimport ReactMarkdown from 'react-markdown'\r\nimport { BackTop } from \"antd\";\r\nimport { Redirect, useParams } from 'react-router';\r\nimport { useDispatch } from 'react-redux';\r\nimport React, { useEffect } from \"react\";\r\nimport { getPostTC } from \"../../redux/filterReducer\";\r\nimport { Preloader } from \"../../Preloder\";\r\nimport { RequestStatusType } from \"../../redux/appReducer\";\r\n\r\nexport const MainWindow = React.memo(() => {\r\n\tconst { id } = useParams<{ id: string }>();\r\n\tconst dispatch = useDispatch();\r\n\tconst status = useSelector<AppStateType, RequestStatusType>(state => state.app.status);\r\n\tuseEffect(() => { dispatch(getPostTC(id)) }, [dispatch, id])\r\n\tconst post = useSelector<AppStateType, PostType>(state => state.filter);\r\n\tconst isAuth = useSelector<AppStateType, boolean>(state => state.app.isAuth);\r\n\r\n\t\r\n\tif (status === \"loading\") { return <Preloader /> }\r\n\tif (!isAuth) {\r\n\t\treturn <Redirect to=\"/login\" />\r\n\t} else {\r\n\treturn (\r\n\r\n\t\t<div className={s.mainWindow}>\r\n\t\t\t<ReactMarkdown\r\n\t\t\t\tclassName={s.mde} children={post?.text}/>\r\n\t\t\t {/* >{post?.text}</ReactMarkdown> */}\r\n\t\t\t<BackTop>\r\n\t\t\t\t<div className={s.backTop}>UP</div>\r\n\t\t\t</BackTop>\r\n\t\t</div>\r\n\t)}\r\n})","import { API } from \"../api/api\"\r\nimport { setAppStatusAC } from \"./appReducer\"\r\n\r\ntype ActionType = any\r\n\r\nexport type CategoryType = {\r\n\ttitle: string\r\n\tposts: [string]\r\n\t__v: number\r\n\t_id: string\r\n}\r\nconst initialState: Array<CategoryType> = []\r\n\r\nexport type InitialStateType = typeof initialState\r\nexport function categoriesReducer(state: InitialStateType = initialState, action: ActionType): InitialStateType {\r\n\r\n\tswitch (action.type) {\r\n\t\tcase \"SET-CATEGORIES\":\r\n\t\t\treturn action.categories.sort((a:CategoryType,b:CategoryType)=>a.title>b.title ? 1 : -1)\r\n\t\tcase \"ADD-CATEGORIES\":\r\n\t\t\treturn [...state, action.category]\r\n\t\tdefault: return state\r\n\t}\r\n}\r\n\r\nexport function setCategoriesAC(categories: any) {\r\n\treturn {\r\n\t\ttype: \"SET-CATEGORIES\",\r\n\t\tcategories\r\n\t} as const\r\n}\r\nexport function addCategoriesAC(category: CategoryType) {\r\n\treturn {\r\n\t\ttype: \"ADD-CATEGORIES\",\r\n\t\tcategory\r\n\t} as const\r\n}\r\n\r\nexport const getCategoriesTC = () => (dispatch: any) => {\r\n\t// dispatch(setAppStatusAC('loading'))\r\n\tAPI.getCategories()\r\n\t\t.then(res => {\r\n\t\t\tconst categories = res.data;\r\n\t\t\tdispatch(setCategoriesAC(categories))\r\n\t\t\tdispatch(setAppStatusAC('succeeded'))\r\n\r\n\t\t})\r\n\t\t.catch(err => console.log(err))\r\n}\r\n\r\nexport const addCategoriesTC = (title: string) => (dispatch: any) => {\r\n\tdispatch(setAppStatusAC('loading'))\r\n\tAPI.createCategory(title)\r\n\t\t.then(res => {\r\n\t\t\tdispatch(setAppStatusAC('succeeded'))\r\n\t\t})\r\n\t\t.catch(err => console.log(\"err\"))\r\n}\r\n\r\n\r\n// export const addPostToCategoriesTC = (post: string, category: string) => (dispatch: any) => {\r\n// \tdispatch(setAppStatusAC('loading'))\r\n// \tAPI.addPostToCategory(post, category)\r\n// \t\t.then(res => {\r\n// \t\t\tdispatch(setAppStatusAC('succeeded'))\r\n// \t\t})\r\n// \t\t.catch(err => console.log(\"err\"))\r\n// }","import { AppStateType } from \"../../redux/store\"\r\nimport s from \"./Login.module.css\"\r\nimport { useSelector } from 'react-redux';\r\nimport { Redirect } from \"react-router\";\r\nimport { Button } from 'antd';\r\nimport React from 'react';\r\nimport { setAppAuthAC } from '../../redux/appReducer';\r\nimport { useDispatch } from 'react-redux';\r\n\r\nexport const Login = React.memo(() => {\r\n\tconst dispatch = useDispatch();\r\n\tconst isAuth = useSelector<AppStateType, boolean>(state => state.app.isAuth);\r\n\tconsole.log(isAuth)\r\n\r\n\tconst onFinish = () => {\r\n\t\tdispatch(setAppAuthAC(true))\r\n\t};\r\n\r\n\t// const onFinishFailed = (errorInfo: any) => {\r\n\t// \tconsole.log('Failed:', errorInfo);\r\n\t// };\r\n\r\n\tif (isAuth) {\r\n\t\treturn <Redirect to={\"/\"} />\r\n\t} else {\r\n\t\treturn (\r\n\t\t\t<div className={s.login}>\r\n\r\n\t\t\t\t{/* <Form\r\n\t\t\t\t\tname=\"basic\"\r\n\t\t\t\t\tlabelCol={{ span: 8 }}\r\n\t\t\t\t\twrapperCol={{ span: 16 }}\r\n\t\t\t\t\tinitialValues={{ remember: true }}\r\n\t\t\t\t\tonFinish={onFinish}\r\n\t\t\t\t\tonFinishFailed={onFinishFailed}\r\n\t\t\t\t\tautoComplete=\"off\"\r\n\t\t\t\t> */}\r\n\t\t\t\t{/* <Form.Item\r\n\t\t\t\t\tlabel=\"Username\"\r\n\t\t\t\t\tname=\"username\"\r\n\t\t\t\t\trules={[{ required: true, message: 'Please input your username!' }]}\r\n\t\t\t\t>\r\n\t\t\t\t\t<Input />\r\n\t\t\t\t</Form.Item> */}\r\n\r\n\t\t\t\t{/* <Form.Item\r\n\t\t\t\t\t\tlabel=\"Password\"\r\n\t\t\t\t\t\tname=\"password\"\r\n\t\t\t\t\t\trules={[{ required: true, message: 'Please input your password!' }]}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Input.Password />\r\n\t\t\t\t\t</Form.Item> */}\r\n\r\n\r\n\t\t\t\t<Button type=\"primary\" htmlType=\"submit\" onClick={onFinish}>\r\n\t\t\t\t\tSubmit\r\n\t\t\t\t</Button>\r\n\r\n\t\t\t\t{/* </Form> */}\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n})","import { API } from '../api/api';\r\nimport { setAppStatusAC } from './appReducer';\r\nexport type PostType = {\r\n\t_id: string\r\n\ttitle: string\r\n\ttext: string\r\n\tcategory: string\r\n\t__v: number\r\n}\r\nexport type ShortPostType = {\r\n\t_id: string\r\n\ttitle: string\r\n\tcategory: string\r\n}\r\ntype ActionType = any\r\nconst initialState = {\r\n\tposts: [] as Array<PostType>,\r\n\tshortPosts: [] as Array<ShortPostType>\r\n}\r\nexport type InitialStateType = typeof initialState\r\nexport function postsReducer(state: InitialStateType = initialState, action: ActionType): InitialStateType {\r\n\r\n\tswitch (action.type) {\r\n\t\tcase \"SET-POSTS\":\r\n\t\t\treturn { ...state, posts: action.posts }\r\n\t\tcase \"SET-SHORT-POSTS\":\r\n\t\t\treturn { ...state, shortPosts: action.shortPosts.sort((a:ShortPostType,b:ShortPostType)=>a.title>b.title ? 1 : -1) }\r\n\t\tdefault: return state\r\n\t}\r\n}\r\n\r\nexport function setPostsAC(posts: any) {\r\n\treturn {\r\n\t\ttype: \"SET-POSTS\",\r\n\t\tposts\r\n\t} as const\r\n}\r\n\r\nexport function setShortPostsAC(shortPosts: any) {\r\n\treturn {\r\n\t\ttype: \"SET-SHORT-POSTS\",\r\n\t\tshortPosts\r\n\t} as const\r\n}\r\n\r\n//unOptimazed\r\nconst getPostsTC = () => (dispatch: any) => {\r\n\tdispatch(setAppStatusAC('loading'))\r\n\tAPI.getPosts()\r\n\t\t.then(res => {\r\n\t\t\tconst posts = res.data;\r\n\t\t\tdispatch(setPostsAC(posts))\r\n\t\t\tdispatch(setAppStatusAC('succeeded'))\r\n\t\t})\r\n\t\t.catch(err => console.log(err))\r\n}\r\n\r\nexport const getShortPostsTC = () => (dispatch: any) => {\r\n\tdispatch(setAppStatusAC('loading'))\r\n\tAPI.getShortPosts()\r\n\t\t.then(res => {\r\n\t\t\tconst posts = res.data;\r\n\t\t\tdispatch(setShortPostsAC(posts))\r\n\t\t\tdispatch(setAppStatusAC('succeeded'))\r\n\t\t})\r\n\t\t.catch(err => console.log(err))\r\n}\r\n\r\nexport const createPostsTC = (title: string, category: string, text: string) => (dispatch: any) => {\r\n\tdispatch(setAppStatusAC('loading'))\r\n\tAPI.createPost(title, category, text)\r\n\t\t.then(res => {\r\n\t\t\tdispatch(setAppStatusAC('succeeded'))\r\n\r\n\t\t})\r\n\t\t.catch(err => console.log(err))\r\n}\r\n\r\n","import s from \"./AdminForm.module.css\"\r\nimport { Input, Button, Select, Result } from 'antd';\r\nimport ReactMde from \"react-mde\";\r\nimport React, { useState } from \"react\";\r\nimport { Suggestion } from \"react-mde\";\r\nimport * as Showdown from \"showdown\";\r\nimport \"react-mde/lib/styles/css/react-mde-all.css\";\r\nimport { API } from './../../../../api/api'\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { AppStateType } from \"../../../../redux/store\";\r\nimport { createPostsTC } from \"../../../../redux/postsReducer\";\r\n\r\nconst { Option } = Select;\r\nconst loadSuggestions = async (text: string) => {\r\n\treturn new Promise<Suggestion[]>((accept, reject) => {\r\n\t\tsetTimeout(() => {\r\n\t\t\tconst suggestions: Suggestion[] = [\r\n\t\t\t\t{\r\n\t\t\t\t\tpreview: \"Andre\",\r\n\t\t\t\t\tvalue: \"@andre\"\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tpreview: \"Angela\",\r\n\t\t\t\t\tvalue: \"@angela\"\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tpreview: \"David\",\r\n\t\t\t\t\tvalue: \"@david\"\r\n\t\t\t\t},\r\n\t\t\t\t{\r\n\t\t\t\t\tpreview: \"Louise\",\r\n\t\t\t\t\tvalue: \"@louise\"\r\n\t\t\t\t}\r\n\t\t\t].filter(i => i.preview.toLowerCase().includes(text.toLowerCase()));\r\n\t\t\taccept(suggestions);\r\n\t\t}, 250);\r\n\t});\r\n};\r\n\r\nconst converter = new Showdown.Converter({\r\n\ttables: true,\r\n\tsimplifiedAutoLink: true,\r\n\tstrikethrough: true,\r\n\ttasklists: true\r\n});\r\n\r\nexport const AdminForm = React.memo(() => {\r\n\tconst categories = useSelector<AppStateType, Array<any>>(state => state.categories);\r\n\tconst dispatch = useDispatch();\r\n\r\n\tconst [title, setTitle] = useState<string>(\"\");\r\n\tconst [dropValue, setDropValue] = useState(\"\");\r\n\tconst [text, setText] = useState<string>(\"\");\r\n\r\n\tconst [selectedTab, setSelectedTab] = useState<\"write\" | \"preview\" | undefined>(\"write\");\r\n\tconst [newCategory, setNewCategory] = useState<string>(\"\");\r\n\tconst [isSuccess, setSuccess] = useState<boolean>(false);\r\n\r\n\tif (isSuccess === true) { setTimeout(() => { setSuccess(false) }, 5000) }\r\n\tfunction handleChange(value: any) {\r\n\t\tsetDropValue(value)\r\n\t}\r\n\r\n\tconst addCategory = () => {\r\n\t\tAPI.createCategory(newCategory)\r\n\t\tsetNewCategory('')\r\n\t}\r\n\r\n\treturn (\r\n\t\t<div className={s.form}>\r\n\t\t\t<div className={s.fields}>\r\n\t\t\t\t<div className={s.postsFields}>\r\n\t\t\t\t\t<label htmlFor=\"title\">Title: </label>\r\n\t\t\t\t\t<Input\r\n\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\tname=\"title\"\r\n\t\t\t\t\t\tautoComplete=\"off\"\r\n\t\t\t\t\t\tvalue={title}\r\n\t\t\t\t\t\tonChange={(e) => { setTitle(e.currentTarget.value) }}\r\n\t\t\t\t\t/>\r\n\t\t\t\t\t<label htmlFor=\"dropdown\">Categories:</label>\r\n\t\t\t\t\t<Select style={{ width: 380 }} onChange={handleChange} value={dropValue}>\r\n\t\t\t\t\t\t{categories.map(c => <Option key={c._id} value={c.title}>{c.title}</Option>)}\r\n\t\t\t\t\t</Select>\r\n\t\t\t\t</div>\r\n\t\t\t\t<div className={s.categoryFields}>\r\n\t\t\t\t\t<label htmlFor=\"category\">Add category:</label>\r\n\t\t\t\t\t<div className={s.addCategory}>\r\n\r\n\t\t\t\t\t\t<Input\r\n\t\t\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\t\t\tname=\"category\"\r\n\t\t\t\t\t\t\tautoComplete=\"off\"\r\n\t\t\t\t\t\t\tvalue={newCategory}\r\n\t\t\t\t\t\t\tonChange={(e) => { setNewCategory(e.currentTarget.value) }}\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t\t<Button type=\"dashed\" onClick={addCategory} disabled={newCategory ? false : true}>ADD</Button>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t</div>\r\n\t\t\t</div>\r\n\r\n\t\t\t<a href=\"https://stackedit.io/app#\" target=\"_blank\" rel=\"noreferrer\" style={{width: \"200px\"}}><Button shape='round' danger> MarkDown Editor</Button></a>\r\n\r\n\t\t\t<div className={s.createArea}>\r\n\t\t\t\t<ReactMde\r\n\t\t\t\t\tminEditorHeight={500}\r\n\t\t\t\t\tminPreviewHeight={600}\r\n\t\t\t\t\tvalue={text}\r\n\t\t\t\t\tonChange={setText}\r\n\t\t\t\t\tselectedTab={selectedTab}\r\n\t\t\t\t\tonTabChange={setSelectedTab}\r\n\t\t\t\t\tgenerateMarkdownPreview={(markdown) =>\r\n\t\t\t\t\t\tPromise.resolve(converter.makeHtml(markdown))\r\n\t\t\t\t\t}\r\n\t\t\t\t\tloadSuggestions={loadSuggestions}\r\n\t\t\t\t\tchildProps={{\r\n\t\t\t\t\t\twriteButton: {\r\n\t\t\t\t\t\t\ttabIndex: -1,\r\n\t\t\t\t\t\t},\r\n\t\t\t\t\t}}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t\t<div className={s.btn}>\r\n\t\t\t\t<Button\r\n\t\t\t\t\ttype=\"primary\"\r\n\t\t\t\t\tsize=\"large\"\r\n\t\t\t\t\tonClick={() => { dispatch(createPostsTC(title, dropValue, text)); setSuccess(true); setTitle(\"\"); setDropValue(\"\"); setText(\"\") }}\r\n\t\t\t\t\tdisabled={title === \"\" || dropValue === \"\" || text === \"\" ? true : false}\r\n\t\t\t\t>CREATE NEW POST</Button>\r\n\t\t\t</div>\r\n\t\t\t{isSuccess && <Result status=\"success\"\r\n\t\t\t\ttitle=\"Post Is Created!!!\" />}\r\n\t\t\t<hr />\r\n\t\t</div>\r\n\t)\r\n})","import s from \"./Admin.module.css\"\r\nimport \"react-mde/lib/styles/css/react-mde-all.css\";\r\nimport { AdminForm } from \"./AdminForm/AdminForm\";\r\nimport { Preloader } from \"../../../Preloder\";\r\nimport { useSelector } from 'react-redux';\r\nimport { AppStateType } from \"../../../redux/store\";\r\nimport { RequestStatusType } from \"../../../redux/appReducer\";\r\nimport { Redirect } from \"react-router\";\r\nimport React from \"react\";\r\n\r\nexport const Admin = React.memo(() => {\r\n\r\n\tconst status = useSelector<AppStateType, RequestStatusType>(state => state.app.status);\r\n\tconst isAuth = useSelector<AppStateType, boolean>(state => state.app.isAuth);\r\n\r\n\tif (!isAuth) {\r\n\t\treturn <Redirect to=\"/login\" />\r\n\t} else {\r\n\t\treturn (<>\r\n\t\t\t{status === \"loading\" && <Preloader />}\r\n\t\t\t<div className={s.adminContainer}>\r\n\t\t\t\t<AdminForm />\r\n\t\t\t\t<hr />\r\n\t\t\t</div></>\r\n\t\t)\r\n\t}\r\n\r\n\r\n})","import { AppStateType } from \"../../../redux/store\"\r\nimport s from \"./Greeting.module.css\"\r\nimport { useSelector } from 'react-redux';\r\nimport { Redirect } from \"react-router\";\r\nimport React from 'react';\r\n\r\n\r\nexport const Greeting = React.memo(() => {\r\n\tconst isAuth = useSelector<AppStateType, boolean>(state => state.app.isAuth);\r\n\r\n\tif (!isAuth) {\r\n\t\treturn <Redirect to={\"/login\"} />\r\n\t} else {\r\n\t\treturn (\r\n\t\t\t<div className={s.greet}>\r\n\t\t\t\t<div></div>\r\n\t\t\t\t<h2>Hello</h2>\r\n\t\t\t\t<p>This is orcus app. </p>\r\n\t\t\t\t<div></div>\r\n\t\t\t</div>\r\n\t\t)\r\n\t}\r\n})","import './App.module.css';\r\nimport 'antd/dist/antd.css';\r\nimport { Route, Switch } from 'react-router-dom';\r\nimport { Empty, Layout } from 'antd';\r\nimport { HeaderNavBar } from './components/HeaderNavBar/HeaderNavBar';\r\nimport { MenuBar } from './components/MenuBar/MenuBar';\r\nimport { MainWindow } from './components/MainWindow/MainWindow';\r\nimport { useEffect } from 'react';\r\nimport { getCategoriesTC } from './redux/categoriesReducer';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Login } from './components/Login/Login';\r\nimport { Admin } from './components/MainWindow/Admin/Admin';\r\nimport { getShortPostsTC } from './redux/postsReducer';\r\nimport { useState } from 'react';\r\nimport { Greeting } from './components/MainWindow/Greeting/Greeting';\r\nconst { Header, Content, Sider } = Layout;\r\n\r\n\r\nfunction App() {\r\n\tconst dispatch = useDispatch();\r\n\tconst [collapsed, setCollapse] = useState(false);\r\n\r\n\tuseEffect(() => {\r\n\t\tdispatch(getCategoriesTC());\r\n\t}, [dispatch]);\r\n\r\n\r\n\tuseEffect(() => {\r\n\t\tdispatch(getShortPostsTC());\r\n\t}, [dispatch]);\r\n\r\n\treturn (\r\n\r\n\t\t<Layout>\r\n\t\t\t<Header>\r\n\t\t\t\t<HeaderNavBar />\r\n\t\t\t</Header>\r\n\t\t\t<Layout >\r\n\t\t\t\t<Sider width={200} className=\"site-layout-background\" collapsed={collapsed} collapsible onCollapse={() => setCollapse(!collapsed)}>\r\n\t\t\t\t\t<MenuBar />\r\n\r\n\t\t\t\t</Sider>\r\n\t\t\t\t<Layout style={{ padding: '0 24px 24px' }}>\r\n\r\n\t\t\t\t\t<Content\r\n\t\t\t\t\t\tclassName=\"site-layout-background\"\r\n\t\t\t\t\t\tstyle={{\r\n\t\t\t\t\t\t\tpadding: 24,\r\n\t\t\t\t\t\t\tmargin: 0,\r\n\t\t\t\t\t\t\tminHeight: 280,\r\n\t\t\t\t\t\t}}\r\n\t\t\t\t\t>\r\n\t\t\t\t\t\t<Switch>\r\n\t\t\t\t\t\t\t<Route exact path=\"/main/:id?\" render={() => <MainWindow />} />\r\n\t\t\t\t\t\t\t<Route exact path=\"/admin\" render={() => <Admin />} />\r\n\t\t\t\t\t\t\t<Route render={() => <Login />} path=\"/login\" />\r\n\t\t\t\t\t\t\t<Route render={() => <Greeting />} path=\"/\" />\r\n\t\t\t\t\t\t\t<Route render={() => <Empty image={Empty.PRESENTED_IMAGE_SIMPLE} style={{ height: \"90vh\" }} />} path=\"*\" />\r\n\r\n\t\t\t\t\t\t</Switch>\r\n\t\t\t\t\t</Content>\r\n\t\t\t\t</Layout>\r\n\t\t\t</Layout>\r\n\t\t</Layout>\r\n\r\n\t);\r\n}\r\n\r\nexport default App;\r\n","import { ReportHandler } from 'web-vitals';\r\n\r\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\r\n  if (onPerfEntry && onPerfEntry instanceof Function) {\r\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\r\n      getCLS(onPerfEntry);\r\n      getFID(onPerfEntry);\r\n      getFCP(onPerfEntry);\r\n      getLCP(onPerfEntry);\r\n      getTTFB(onPerfEntry);\r\n    });\r\n  }\r\n};\r\n\r\nexport default reportWebVitals;\r\n","import { applyMiddleware, combineReducers, createStore } from \"redux\";\r\nimport { categoriesReducer } from \"./categoriesReducer\";\r\nimport { postsReducer } from \"./postsReducer\";\r\nimport thunk from 'redux-thunk';\r\nimport { appReducer } from './appReducer';\r\nimport { filterReducer } from './filterReducer';\r\n\r\nconst rootReducer = combineReducers({\r\n    categories: categoriesReducer,\r\n\tposts: postsReducer,\r\n\tfilter: filterReducer,\r\n\tapp: appReducer\r\n\r\n});\r\n\r\nexport const store = createStore(rootReducer, applyMiddleware(thunk));\r\n\r\nexport type AppStateType = ReturnType<typeof rootReducer>","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { Provider } from 'react-redux';\r\nimport { store } from './redux/store'\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n\t<Provider store={store}>\r\n\t\t<BrowserRouter>\r\n\t\t\t<App />\r\n\t\t</BrowserRouter>\r\n\t</Provider>,\r\n\r\n\tdocument.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"AdminForm_form__34TSJ\",\"fields\":\"AdminForm_fields__2vU6H\",\"postsFields\":\"AdminForm_postsFields__283_X\",\"categoryFields\":\"AdminForm_categoryFields__fclOq\",\"addCategory\":\"AdminForm_addCategory__2pIjH\",\"createArea\":\"AdminForm_createArea__3kh7L\",\"btn\":\"AdminForm_btn__28Gqj\"};"],"sourceRoot":""}