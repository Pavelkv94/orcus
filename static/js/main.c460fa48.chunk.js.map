{"version":3,"sources":["components/MainWindow/MainWindow.module.css","App.module.css","components/MenuBar/MenuBar.module.css","components/Login/Login.module.css","components/MainWindow/Admin/Admin.module.css","components/MainWindow/Greeting/Greeting.module.css","api/api.ts","redux/appReducer.ts","components/HeaderNavBar/HeaderNavBar.tsx","redux/filterReducer.ts","components/MenuBar/MenuBar.tsx","Preloder.tsx","components/MainWindow/MainWindow.tsx","redux/categoriesReducer.ts","components/Login/Login.tsx","redux/postsReducer.ts","components/MainWindow/Admin/AdminForm/Modal.tsx","components/MainWindow/Admin/AdminForm/AdminForm.tsx","components/MainWindow/Admin/Admin.tsx","components/MainWindow/Greeting/Greeting.tsx","App.tsx","reportWebVitals.ts","redux/store.ts","index.tsx","components/MainWindow/Admin/AdminForm/AdminForm.module.css"],"names":["module","exports","Headers","append","instance","axios","create","baseURL","API","title","post","get","category","text","id","put","delete","initialState","status","error","isAuth","setAppStatusAC","type","setAppAuthAC","auth","HeaderNavBar","React","memo","dispatch","useDispatch","theme","mode","defaultSelectedKeys","className","s","menu","Item","style","position","right","onClick","LogoutOutlined","to","pathname","getPostTC","then","res","data","setPostAC","catch","err","console","log","MenuBar","posts","useSelector","state","shortPosts","categories","menuBar","subMenuCloseDelay","map","c","icon","DingtalkOutlined","p","_id","Preloader","tip","size","MainWindow","useParams","app","useEffect","filter","mainWindow","mde","children","backTop","Login","login","htmlType","getShortPostsTC","CloseModal","visible","setVisible","callback","useState","confirmLoading","setConfirmLoading","setModalText","onOk","setTimeout","onCancel","Panel","Collapse","Option","Select","loadSuggestions","a","Promise","accept","reject","suggestions","preview","value","i","toLowerCase","includes","converter","Showdown","tables","simplifiedAutoLink","strikethrough","tasklists","AdminForm","setTitle","dropValue","setDropValue","setText","allPosts","setAllPosts","editMode","setEditMode","tempId","setTempId","selectedTab","setSelectedTab","newCategory","setNewCategory","notification","success","message","placement","editPost","saveChanges","editPostsTC","form","fields","postsFields","htmlFor","name","autoComplete","onChange","e","currentTarget","width","categoryFields","addCategory","disabled","topActions","href","target","rel","shape","danger","content","trigger","color","borderColor","navigator","clipboard","writeText","createArea","minEditorHeight","minPreviewHeight","onTabChange","generateMarkdownPreview","markdown","resolve","makeHtml","childProps","writeButton","tabIndex","btn","createPostsTC","ghost","cat","header","margin","float","Admin","adminContainer","Greeting","greet","Header","Layout","Content","Sider","App","collapsed","setCollapse","setCategoriesAC","collapsible","onCollapse","padding","minHeight","exact","path","render","image","Empty","PRESENTED_IMAGE_SIMPLE","height","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","rootReducer","combineReducers","action","sort","b","store","createStore","applyMiddleware","thunk","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.c460fa48.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"mainWindow\":\"MainWindow_mainWindow__nKQQg\",\"backTop\":\"MainWindow_backTop__1xoHy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"App_preloader__1bkES\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ant-menu-submenu-title\":\"MenuBar_ant-menu-submenu-title__3ofyN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"Login_login__2Px22\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"adminContainer\":\"Admin_adminContainer__3tgww\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"greet\":\"Greeting_greet__337Fv\"};","import axios from 'axios'\n\nlet h = new Headers();\nh.append(\"Content-Type\", \"application/json\");\nconst instance = axios.create({\n\t// baseURL: \"https://orcuserver.herokuapp.com\",\n\tbaseURL: \"http://localhost:3002\",\n});\n\nexport const API = {\n\tcreateCategory(title: any) {\n\t\treturn instance.post('/categories', { title: title })\n\t},\n\tgetCategories() {\n\t\treturn instance.get('/categories')\n\t},\n\tcreatePost(title: string, category: string, text: string) {\n\t\treturn instance.post('/posts', { title, category, text })\n\t},\n\teditPost(title: string, category: string, text: string, id: string) {\n\t\treturn instance.put(`/posts/${id}`, { title, category, text })\n\t},\n\tdeletePost(id:string) {\n\t\treturn instance.delete(`/posts/${id}`)\n\t},\n\tgetPosts() {\n\t\treturn instance.get('/posts')\n\t},\n\tgetShortPosts() {\n\t\treturn instance.get('/shortPosts')\n\t},\n\tgetPost(id: string) {\n\t\treturn instance.get(`main/${id}`)\n\t},\n\taddPostToCategory(post: string, category: string) {\n\t\treturn instance.put('/categories', { newPost: post, category })\n\t},\n\tlogin(pass: any) {\n        return instance.post('/auth', { pass });\n    },\n}","import { AxiosError } from 'axios';\nimport { API } from '../api/api';\n\nexport type RequestStatusType = 'idle' | 'loading' | 'succeeded' | 'failed';\n\ntype ActionType = any\n\nconst initialState = {\n\tstatus: 'idle' as RequestStatusType,\n\terror: null as string | null,\n\tisAuth: false\n};\n\nexport type InitialStateType = typeof initialState\nexport function appReducer(state: InitialStateType = initialState, action: ActionType): InitialStateType {\n\n\tswitch (action.type) {\n\t\tcase \"SET-CATEGORIES\":\n\t\t\treturn action.categories\n\t\tcase \"SET-APP-STATUS\":\n\t\t\treturn { ...state, status: action.status }\n\t\tcase \"SET-APP-AUTH\":\n\t\t\treturn { ...state, isAuth: action.auth }\n\n\t\tdefault: return state\n\t}\n}\n\nexport const setAppStatusAC = (status: RequestStatusType) => {\n\treturn {\n\t\ttype: \"SET-APP-STATUS\",\n\t\tstatus\n\t}\n}\n\nexport const setAppAuthAC = (auth: boolean) => {\n\treturn {\n\t\ttype: \"SET-APP-AUTH\",\n\t\tauth\n\t}\n}\n\nexport const loginTC = (pass: any) => (dispatch: any) => {\n    // dispatch(setAppStatusAC({ status: 'loading' }))\n    API.login(pass)\n        .then(res => console.log(res))\n        .catch((err: AxiosError) => {\n            // handleServerNetworkError(dispatch, err.message)\n        })\n};","import { LogoutOutlined } from '@ant-design/icons';\nimport { Menu } from 'antd';\nimport React from 'react';\nimport { NavLink } from 'react-router-dom';\nimport s from './HeaderNavBar.module.css'\nimport { useDispatch } from 'react-redux';\nimport { setAppAuthAC } from '../../redux/appReducer';\n\n\nexport const HeaderNavBar = React.memo(() => {\n\tconst dispatch = useDispatch();\n\tconst exit = () => { dispatch(setAppAuthAC(false)) }\n\n\treturn (\n\t\t<div>\n\t\t\t<Menu theme=\"dark\" mode=\"horizontal\" defaultSelectedKeys={['1']} className={s.menu} >\n\t\t\t\t<Menu.Item style={{ position: 'absolute', right: '10px' }} onClick={exit}><LogoutOutlined /></Menu.Item>\n\t\t\t\t<Menu.Item><NavLink to={{ pathname: `/admin` }} >ADMIN</NavLink></Menu.Item>\n\t\t\t</Menu>\n\t\t</div>\n\t)\n})","import { API } from '../api/api';\nimport { setAppStatusAC } from './appReducer';\nimport { PostType } from './postsReducer';\ntype ActionType = any\n\nconst initialState = {} as PostType\n\nexport type InitialStateType = typeof initialState\nexport function filterReducer(state: InitialStateType = initialState, action: ActionType): InitialStateType {\n\n\tswitch (action.type) {\n\t\n\t\tcase \"SET-POST\":\n\t\t\treturn action.post\n\n\t\tdefault: return state\n\t}\n}\n\nexport function setPostAC(post: PostType) {\n\treturn {\n\t\ttype: \"SET-POST\",\n\t\tpost\n\t} as const\n}\n\nexport const getPostTC = (id: string) => (dispatch: any) => {\n\tdispatch(setAppStatusAC('loading'))\n\tAPI.getPost(id)\n\t\t.then(res => {\n\t\t\tconst post = res.data[0];\n\t\t\tdispatch(setPostAC(post))\n\t\t\tdispatch(setAppStatusAC('succeeded'))\n\t\t})\n\t\t.catch(err => console.log(err))\n}","import { NavLink } from 'react-router-dom';\nimport { Menu } from 'antd';\nimport s from \"./MenuBar.module.css\"\nimport { DingtalkOutlined } from '@ant-design/icons';\nimport { useSelector } from 'react-redux';\nimport { AppStateType } from \"../../redux/store\";\nimport { ShortPostType } from \"../../redux/postsReducer\";\nimport SubMenu from \"antd/lib/menu/SubMenu\";\nimport { useDispatch } from 'react-redux';\nimport { getPostTC } from '../../redux/filterReducer';\nimport React from 'react';\nimport { CategoryType } from '../../redux/categoriesReducer';\n\nexport const MenuBar = React.memo(() => {\n\tconst dispatch = useDispatch();\n\tconst posts = useSelector<AppStateType, Array<ShortPostType>>(state => state.posts.shortPosts);\n\tconst categories = useSelector<AppStateType, Array<CategoryType>>(state => state.categories);\n\n\treturn (\n\t\t<div>\n\t\t\t<Menu\n\t\t\t\tclassName={s.menuBar}\n\t\t\t\ttheme=\"dark\"\n\t\t\t\tmode=\"inline\"\n\t\t\t\tdefaultSelectedKeys={['1']}\n\t\t\t\tsubMenuCloseDelay={2}\n\t\t\t>\n\t\t\t\t{categories?.map(c =>\n\t\t\t\t\t<SubMenu key={c._id} icon={<DingtalkOutlined />} title={c.title} >\n\t\t\t\t\t\t{posts?.map(p => \n\t\t\t\t\t\t\tp.category === c.title && <Menu.Item key={p._id} onClick={() => dispatch(getPostTC(p._id))}>\n\t\t\t\t\t\t\t\t<NavLink to={`/main/${p._id}`}> {p.title}</NavLink> \n\t\t\t\t\t\t\t\t</Menu.Item>)}\n\t\t\t\t\t</SubMenu>)}\n\t\t\t</Menu>\n\t\t</div>\n\t)\n})","import { Spin } from \"antd\"\nimport './App.module.css';\n\nexport const Preloader = () => {\n\treturn (\n\t\t<div className='preloader'>\n\t\t\t<Spin tip=\"Loading...\" size=\"large\">\n\t\t\t</Spin>\n\t\t</div>\n\t)\n}","import s from \"./MainWindow.module.css\"\nimport { useSelector } from 'react-redux';\nimport { AppStateType } from \"../../redux/store\";\nimport { PostType } from \"../../redux/postsReducer\";\nimport ReactMarkdown from 'react-markdown'\nimport { BackTop } from \"antd\";\nimport { Redirect, useParams } from 'react-router';\nimport { useDispatch } from 'react-redux';\nimport React, { useEffect } from \"react\";\nimport { getPostTC } from \"../../redux/filterReducer\";\nimport { Preloader } from \"../../Preloder\";\nimport { RequestStatusType } from \"../../redux/appReducer\";\n\nexport const MainWindow = React.memo(() => {\n\tconst { id } = useParams<{ id: string }>();\n\tconst dispatch = useDispatch();\n\tconst status = useSelector<AppStateType, RequestStatusType>(state => state.app.status);\n\tuseEffect(() => { dispatch(getPostTC(id)) }, [dispatch, id])\n\tconst post = useSelector<AppStateType, PostType>(state => state.filter);\n\tconst isAuth = useSelector<AppStateType, boolean>(state => state.app.isAuth);\n\n\t\n\tif (status === \"loading\") { return <Preloader /> }\n\tif (!isAuth) {\n\t\treturn <Redirect to=\"/login\" />\n\t} else {\n\treturn (\n\n\t\t<div className={s.mainWindow}>\n\t\t\t<ReactMarkdown\n\t\t\t\tclassName={s.mde} children={post?.text}/>\n\t\t\t {/* >{post?.text}</ReactMarkdown> */}\n\t\t\t<BackTop>\n\t\t\t\t<div className={s.backTop}>UP</div>\n\t\t\t</BackTop>\n\t\t</div>\n\t)}\n})","import { API } from \"../api/api\"\nimport { setAppStatusAC } from \"./appReducer\"\n\ntype ActionType = any\n\nexport type CategoryType = {\n\ttitle: string\n\tposts: [string]\n\t__v: number\n\t_id: string\n}\nconst initialState: Array<CategoryType> = []\n\nexport type InitialStateType = typeof initialState\nexport function categoriesReducer(state: InitialStateType = initialState, action: ActionType): InitialStateType {\n\n\tswitch (action.type) {\n\t\tcase \"SET-CATEGORIES\":\n\t\t\treturn action.categories.sort((a:CategoryType,b:CategoryType)=>a.title>b.title ? 1 : -1)\n\t\tcase \"ADD-CATEGORIES\":\n\t\t\treturn [...state, action.category]\n\t\tdefault: return state\n\t}\n}\n\nexport function setCategoriesAC(categories: any) {\n\treturn {\n\t\ttype: \"SET-CATEGORIES\",\n\t\tcategories\n\t} as const\n}\nexport function addCategoriesAC(category: CategoryType) {\n\treturn {\n\t\ttype: \"ADD-CATEGORIES\",\n\t\tcategory\n\t} as const\n}\n\nexport const getCategoriesTC = () => (dispatch: any) => {\n\t// dispatch(setAppStatusAC('loading'))\n\tAPI.getCategories()\n\t\t.then(res => {\n\t\t\tconst categories = res.data;\n\t\t\tdispatch(setCategoriesAC(categories))\n\t\t\tdispatch(setAppStatusAC('succeeded'))\n\n\t\t})\n\t\t.catch(err => console.log(err))\n}\n\nexport const addCategoriesTC = (title: string) => (dispatch: any) => {\n\tdispatch(setAppStatusAC('loading'))\n\tAPI.createCategory(title)\n\t\t.then(res => {\n\t\t\tdispatch(setAppStatusAC('succeeded'))\n\t\t})\n\t\t.catch(err => console.log(\"err\"))\n}\n\n\n// export const addPostToCategoriesTC = (post: string, category: string) => (dispatch: any) => {\n// \tdispatch(setAppStatusAC('loading'))\n// \tAPI.addPostToCategory(post, category)\n// \t\t.then(res => {\n// \t\t\tdispatch(setAppStatusAC('succeeded'))\n// \t\t})\n// \t\t.catch(err => console.log(\"err\"))\n// }","import { AppStateType } from \"../../redux/store\"\nimport s from \"./Login.module.css\"\nimport { useSelector } from 'react-redux';\nimport { Redirect } from \"react-router\";\nimport { Button } from 'antd';\nimport React from 'react';\nimport { setAppAuthAC } from '../../redux/appReducer';\nimport { useDispatch } from 'react-redux';\n\nexport const Login = React.memo(() => {\n\tconst dispatch = useDispatch();\n\tconst isAuth = useSelector<AppStateType, boolean>(state => state.app.isAuth);\n\tconsole.log(isAuth)\n\n\tconst onFinish = () => {\n\t\tdispatch(setAppAuthAC(true))\n\t};\n\n\t// const onFinishFailed = (errorInfo: any) => {\n\t// \tconsole.log('Failed:', errorInfo);\n\t// };\n\n\tif (isAuth) {\n\t\treturn <Redirect to={\"/\"} />\n\t} else {\n\t\treturn (\n\t\t\t<div className={s.login}>\n\n\t\t\t\t{/* <Form\n\t\t\t\t\tname=\"basic\"\n\t\t\t\t\tlabelCol={{ span: 8 }}\n\t\t\t\t\twrapperCol={{ span: 16 }}\n\t\t\t\t\tinitialValues={{ remember: true }}\n\t\t\t\t\tonFinish={onFinish}\n\t\t\t\t\tonFinishFailed={onFinishFailed}\n\t\t\t\t\tautoComplete=\"off\"\n\t\t\t\t> */}\n\t\t\t\t{/* <Form.Item\n\t\t\t\t\tlabel=\"Username\"\n\t\t\t\t\tname=\"username\"\n\t\t\t\t\trules={[{ required: true, message: 'Please input your username!' }]}\n\t\t\t\t>\n\t\t\t\t\t<Input />\n\t\t\t\t</Form.Item> */}\n\n\t\t\t\t{/* <Form.Item\n\t\t\t\t\t\tlabel=\"Password\"\n\t\t\t\t\t\tname=\"password\"\n\t\t\t\t\t\trules={[{ required: true, message: 'Please input your password!' }]}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Input.Password />\n\t\t\t\t\t</Form.Item> */}\n\n\n\t\t\t\t<Button type=\"primary\" htmlType=\"submit\" onClick={onFinish}>\n\t\t\t\t\tSubmit\n\t\t\t\t</Button>\n\n\t\t\t\t{/* </Form> */}\n\t\t\t</div>\n\t\t)\n\t}\n})","import { API } from '../api/api';\nimport { setAppStatusAC } from './appReducer';\nexport type PostType = {\n\t_id: string\n\ttitle: string\n\ttext: string\n\tcategory: string\n\t__v: number\n}\nexport type ShortPostType = {\n\t_id: string\n\ttitle: string\n\tcategory: string\n}\ntype ActionType = any\nconst initialState = {\n\tposts: [] as Array<PostType>,\n\tshortPosts: [] as Array<ShortPostType>\n}\nexport type InitialStateType = typeof initialState\nexport function postsReducer(state: InitialStateType = initialState, action: ActionType): InitialStateType {\n\n\tswitch (action.type) {\n\t\tcase \"SET-POSTS\":\n\t\t\treturn { ...state, posts: action.posts }\n\t\tcase \"SET-SHORT-POSTS\":\n\t\t\treturn { ...state, shortPosts: action.shortPosts.sort((a:ShortPostType,b:ShortPostType)=>a.title>b.title ? 1 : -1) }\n\t\tdefault: return state\n\t}\n}\n\nexport function setPostsAC(posts: any) {\n\treturn {\n\t\ttype: \"SET-POSTS\",\n\t\tposts\n\t} as const\n}\n\nexport function setShortPostsAC(shortPosts: any) {\n\treturn {\n\t\ttype: \"SET-SHORT-POSTS\",\n\t\tshortPosts\n\t} as const\n}\n\n//unOptimazed\nconst getPostsTC = () => (dispatch: any) => {\n\tdispatch(setAppStatusAC('loading'))\n\tAPI.getPosts()\n\t\t.then(res => {\n\t\t\tconst posts = res.data;\n\t\t\tdispatch(setPostsAC(posts))\n\t\t\tdispatch(setAppStatusAC('succeeded'))\n\t\t})\n\t\t.catch(err => console.log(err))\n}\n\nexport const getShortPostsTC = () => (dispatch: any) => {\n\tdispatch(setAppStatusAC('loading'))\n\tAPI.getShortPosts()\n\t\t.then(res => {\n\t\t\tconst posts = res.data;\n\t\t\tdispatch(setShortPostsAC(posts))\n\t\t\tdispatch(setAppStatusAC('succeeded'))\n\t\t})\n\t\t.catch(err => console.log(err))\n\t\tdispatch(setAppStatusAC('idle'))\n}\n\nexport const createPostsTC = (title: string, category: string, text: string) => (dispatch: any) => {\n\tdispatch(setAppStatusAC('loading'))\n\tAPI.createPost(title, category, text)\n\t\t.then(res => {\n\t\t\tdispatch(setAppStatusAC('succeeded'))\n\n\t\t})\n\t\t.catch(err => console.log(err))\n\t\tdispatch(setAppStatusAC('idle'))\n}\n\nexport const editPostsTC = (title: string, category: string, text: string, id: string) => (dispatch: any) => {\n\tdispatch(setAppStatusAC('loading'))\n\tAPI.editPost(title, category, text, id)\n\t\t.then(res => {\n\t\t\tdispatch(setAppStatusAC('succeeded'))\n\n\t\t})\n\t\t.catch(err => console.log(err))\n\t\tdispatch(setAppStatusAC('idle'))\n}\n\nexport const deletePostsTC = (id: string) => (dispatch: any) => {\n\tdispatch(setAppStatusAC('loading'))\n\tAPI.deletePost(id)\n\t\t.then(res => {\n\t\t\tdispatch(setAppStatusAC('succeeded'))\n\n\t\t})\n\t\t.catch(err => console.log(err))\n\t\tdispatch(setAppStatusAC('idle'))\n}","import React  from \"react\";\nimport { Modal, Button } from 'antd';\n\nexport const CloseModal = ({ visible, setVisible, callback }: any) => {\n  \n  const [confirmLoading, setConfirmLoading] = React.useState(false);\n  const [modalText, setModalText] = React.useState('Content of the modal');\n\n  const showModal = () => {\n    setVisible(true);\n  };\n\n  const handleOk = () => {\n    setModalText('The modal will be closed after two seconds');\n\tcallback()\n    setConfirmLoading(true);\n    setTimeout(() => {\n      setVisible(false);\n      setConfirmLoading(false);\n    }, 2000);\n  };\n\n  const handleCancel = () => {\n    setVisible(false);\n  };\n\n  return (\n      <Modal\n        title=\"Delete This Post?\"\n        visible={visible}\n        onOk={handleOk}\n        confirmLoading={confirmLoading}\n        onCancel={handleCancel}\n      >\n        <p>This action cannot be undone.</p>\n      </Modal>\n  );\n};","import s from \"./AdminForm.module.css\"\nimport { Input, Button, Select, Collapse, notification, Popover } from 'antd';\nimport ReactMde from \"react-mde\";\nimport React, { useEffect, useState } from \"react\";\nimport { Suggestion } from \"react-mde\";\nimport * as Showdown from \"showdown\";\nimport \"react-mde/lib/styles/css/react-mde-all.css\";\nimport { API } from './../../../../api/api'\nimport { useDispatch, useSelector } from \"react-redux\";\nimport { AppStateType } from \"../../../../redux/store\";\nimport { createPostsTC, deletePostsTC, editPostsTC, getShortPostsTC, PostType, ShortPostType } from \"../../../../redux/postsReducer\";\nimport { getPostTC } from \"../../../../redux/filterReducer\";\nimport { RequestStatusType } from \"../../../../redux/appReducer\";\nimport { CloseModal } from \"./Modal\";\n\nconst { Panel } = Collapse;\n\nconst { Option } = Select;\nconst loadSuggestions = async (text: string) => {\n\treturn new Promise<Suggestion[]>((accept, reject) => {\n\t\tsetTimeout(() => {\n\t\t\tconst suggestions: Suggestion[] = [\n\t\t\t\t{\n\t\t\t\t\tpreview: \"Andre\",\n\t\t\t\t\tvalue: \"@andre\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tpreview: \"Angela\",\n\t\t\t\t\tvalue: \"@angela\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tpreview: \"David\",\n\t\t\t\t\tvalue: \"@david\"\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tpreview: \"Louise\",\n\t\t\t\t\tvalue: \"@louise\"\n\t\t\t\t}\n\t\t\t].filter(i => i.preview.toLowerCase().includes(text.toLowerCase()));\n\t\t\taccept(suggestions);\n\t\t}, 250);\n\t});\n};\n\nconst converter = new Showdown.Converter({\n\ttables: true,\n\tsimplifiedAutoLink: true,\n\tstrikethrough: true,\n\ttasklists: true\n});\n\nexport const AdminForm = React.memo(() => {\n\tconst categories = useSelector<AppStateType, Array<any>>(state => state.categories);\n\tconst posts = useSelector<AppStateType, Array<ShortPostType>>(state => state.posts.shortPosts);\n\tconst post = useSelector<AppStateType, PostType>(state => state.filter);\n\tconst status = useSelector<AppStateType, RequestStatusType>(state => state.app.status);\n\tconst dispatch = useDispatch();\n\n\tconst [title, setTitle] = useState<string>(\"\");\n\tconst [dropValue, setDropValue] = useState(\"\");\n\tconst [text, setText] = useState<string>(\"\");\n\tconst [allPosts, setAllPosts] = useState<boolean>(false);\n\tconst [editMode, setEditMode] = useState<boolean>(false);\n\tconst [visible, setVisible] = React.useState<boolean>(false);\n\tconst [tempId, setTempId] = React.useState<string>('');\n\n\tconst [selectedTab, setSelectedTab] = useState<\"write\" | \"preview\" | undefined>(\"write\");\n\tconst [newCategory, setNewCategory] = useState<string>(\"\");\n\n\tuseEffect(() => {\n\t\tallPosts && dispatch(getShortPostsTC());\n\t}, [dispatch, allPosts]);\n\n\tuseEffect(() => {\n\t\tstatus === 'succeeded' && notification.success({\n\t\t\tmessage: `SUCCESS!`,\n\t\t\tplacement: 'topRight'\n\t\t})\n\t\tstatus === 'failed' && notification.error({\n\t\t\tmessage: `FAILED!`,\n\t\t\tplacement: 'topRight'\n\t\t})\n\t}, [status])\n\n\tfunction handleChange(value: any) {\n\t\tsetDropValue(value)\n\t};\n\n\tconst addCategory = () => {\n\t\tAPI.createCategory(newCategory)\n\t\tsetNewCategory('')\n\t};\n\n\tconst createPost = () => { dispatch(createPostsTC(title, dropValue, text)); setTitle(\"\"); setDropValue(\"\"); setText(\"\"); dispatch(getShortPostsTC()); };\n\n\tconst editPost = (id: string) => { setEditMode(true); dispatch(getPostTC(id)); setTitle(post.title); setDropValue(post.category); setText(post.text); };\n\n\t// const deletePost = (id: string) => dispatch(deletePostsTC(id));\n\tconst deletePostModal = (id: string) => {setVisible(true); setTempId(id)};\n\n\tconst deletePost = () => {dispatch(deletePostsTC(tempId)); dispatch(getShortPostsTC());};\n\n\tconst saveChanges = (id: string) => { dispatch(editPostsTC(title, dropValue, text, id)); setTitle(\"\"); setDropValue(\"\"); setText(\"\") };\n\n\treturn (\n\t\t<div className={s.form}>\n\t\t\t<div className={s.fields}>\n\t\t\t\t<div className={s.postsFields}>\n\t\t\t\t\t<label htmlFor=\"title\">Title: </label>\n\t\t\t\t\t<Input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tname=\"title\"\n\t\t\t\t\t\tautoComplete=\"off\"\n\t\t\t\t\t\tvalue={title}\n\t\t\t\t\t\tonChange={(e) => { setTitle(e.currentTarget.value) }}\n\t\t\t\t\t/>\n\t\t\t\t\t<label htmlFor=\"dropdown\">Categories:</label>\n\t\t\t\t\t<Select style={{ width: 380 }} onChange={handleChange} value={dropValue}>\n\t\t\t\t\t\t{categories.map(c => <Option key={c._id} value={c.title}>{c.title}</Option>)}\n\t\t\t\t\t</Select>\n\t\t\t\t</div>\n\t\t\t\t<div className={s.categoryFields}>\n\t\t\t\t\t<label htmlFor=\"category\">Add category:</label>\n\t\t\t\t\t<div className={s.addCategory}>\n\n\t\t\t\t\t\t<Input\n\t\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\t\tname=\"category\"\n\t\t\t\t\t\t\tautoComplete=\"off\"\n\t\t\t\t\t\t\tvalue={newCategory}\n\t\t\t\t\t\t\tonChange={(e) => { setNewCategory(e.currentTarget.value) }}\n\t\t\t\t\t\t/>\n\t\t\t\t\t\t<Button type=\"dashed\" onClick={addCategory} disabled={newCategory ? false : true}>ADD</Button>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t</div>\n\t\t\t<div className={s.topActions}>\n\t\t\t\t<a href=\"https://stackedit.io/app#\" target=\"_blank\" rel=\"noreferrer\" style={{ width: \"200px\" }}><Button shape='round' danger>MarkDown Editor</Button></a>\n\t\t\t\t<Popover content='Copied!'\n\t\t\t\t\ttrigger='click'\n\t\t\t\t><Button shape='round' style={{ color: 'orange', borderColor: 'orange' }} onClick={() => navigator.clipboard.writeText(text)}>\n\t\t\t\t\t\tCOPY ALL TEXT\n\t\t\t\t\t</Button></Popover>\n\t\t\t</div>\n\t\t\t<div className={s.createArea}>\n\t\t\t\t<ReactMde\n\t\t\t\t\tminEditorHeight={500}\n\t\t\t\t\tminPreviewHeight={600}\n\t\t\t\t\tvalue={text}\n\t\t\t\t\tonChange={setText}\n\t\t\t\t\tselectedTab={selectedTab}\n\t\t\t\t\tonTabChange={setSelectedTab}\n\t\t\t\t\tgenerateMarkdownPreview={(markdown) =>\n\t\t\t\t\t\tPromise.resolve(converter.makeHtml(markdown))\n\t\t\t\t\t}\n\t\t\t\t\tloadSuggestions={loadSuggestions}\n\t\t\t\t\tchildProps={{\n\t\t\t\t\t\twriteButton: {\n\t\t\t\t\t\t\ttabIndex: -1,\n\t\t\t\t\t\t},\n\t\t\t\t\t}}\n\t\t\t\t/>\n\t\t\t</div>\n\t\t\t<div className={s.btn}>\n\t\t\t\t{editMode && <Button type=\"default\" size=\"large\" danger onClick={() => { setEditMode(false); setTitle(\"\"); setDropValue(\"\"); setText(\"\") }}>Cancel</Button>}\n\t\t\t\t<Button\n\t\t\t\t\ttype=\"primary\"\n\t\t\t\t\tsize=\"large\"\n\t\t\t\t\tonClick={!editMode ? createPost : () => saveChanges(post._id)}\n\t\t\t\t\tdisabled={title === \"\" || dropValue === \"\" || text === \"\" ? true : false}\n\t\t\t\t>{!editMode ? 'CREATE NEW POST' : 'SAVE CHANGES'}</Button>\n\n\t\t\t</div>\n\t\t\t<hr />\n\n\t\t\t{!allPosts ? <Button type=\"primary\" ghost onClick={() => setAllPosts(true)}>All Posts</Button>\n\t\t\t\t: <Button type=\"primary\" ghost onClick={() => setAllPosts(false)}>Close Posts List</Button>}\n\n\t\t\t{allPosts &&\n\t\t\t\t<Collapse>\n\t\t\t\t\t{categories.map(cat =>\n\t\t\t\t\t\t<Panel header={cat.title} key={cat._id}>\n\t\t\t\t\t\t\t{posts.map(post => post.category === cat.title &&\n\t\t\t\t\t\t\t\t<p key={post._id}>{post.title}\n\t\t\t\t\t\t\t\t\t<Button type=\"dashed\" style={{ color: 'green', margin: '0px 4px', float: 'right' }} onClick={() => editPost(post._id)}>Edit</Button>\n\t\t\t\t\t\t\t\t\t<Button type=\"dashed\" style={{ color: 'red', margin: '0px 4px', float: 'right' }} onClick={() => deletePostModal(post._id)}>Delete</Button>\n\t\t\t\t\t\t\t\t</p>\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t</Panel>)}\n\t\t\t\t</Collapse>}\n\t\t\t\t<CloseModal visible={visible} setVisible={setVisible} callback={deletePost}/>\n\t\t</div>\n\t)\n})","import s from \"./Admin.module.css\"\nimport \"react-mde/lib/styles/css/react-mde-all.css\";\nimport { AdminForm } from \"./AdminForm/AdminForm\";\nimport { Preloader } from \"../../../Preloder\";\nimport { useSelector } from 'react-redux';\nimport { AppStateType } from \"../../../redux/store\";\nimport { RequestStatusType } from \"../../../redux/appReducer\";\nimport { Redirect } from \"react-router\";\nimport React from \"react\";\n\nexport const Admin = React.memo(() => {\n\n\tconst status = useSelector<AppStateType, RequestStatusType>(state => state.app.status);\n\tconst isAuth = useSelector<AppStateType, boolean>(state => state.app.isAuth);\n\n\tif (!isAuth) {\n\t\treturn <Redirect to=\"/login\" />\n\t} else {\n\t\treturn (<>\n\t\t\t{status === \"loading\" && <Preloader />}\n\t\t\t<div className={s.adminContainer}>\n\t\t\t\t<AdminForm />\n\t\t\t\t<hr />\n\t\t\t</div></>\n\t\t)\n\t}\n\n\n})","import { AppStateType } from \"../../../redux/store\"\nimport s from \"./Greeting.module.css\"\nimport { useSelector } from 'react-redux';\nimport { Redirect } from \"react-router\";\nimport React from 'react';\n\n\nexport const Greeting = React.memo(() => {\n\tconst isAuth = useSelector<AppStateType, boolean>(state => state.app.isAuth);\n\n\tif (!isAuth) {\n\t\treturn <Redirect to={\"/login\"} />\n\t} else {\n\t\treturn (\n\t\t\t<div className={s.greet}>\n\t\t\t\t<div></div>\n\t\t\t\t<h2>Hello</h2>\n\t\t\t\t<p>This is orcus app. </p>\n\t\t\t\t<div></div>\n\t\t\t</div>\n\t\t)\n\t}\n})","import './App.module.css';\nimport 'antd/dist/antd.css';\nimport { Route, Switch } from 'react-router-dom';\nimport { Empty, Layout } from 'antd';\nimport { HeaderNavBar } from './components/HeaderNavBar/HeaderNavBar';\nimport { MenuBar } from './components/MenuBar/MenuBar';\nimport { MainWindow } from './components/MainWindow/MainWindow';\nimport { useEffect } from 'react';\nimport { getCategoriesTC } from './redux/categoriesReducer';\nimport { useDispatch } from 'react-redux';\nimport { Login } from './components/Login/Login';\nimport { Admin } from './components/MainWindow/Admin/Admin';\nimport { getShortPostsTC } from './redux/postsReducer';\nimport { useState } from 'react';\nimport { Greeting } from './components/MainWindow/Greeting/Greeting';\nconst { Header, Content, Sider } = Layout;\n\n\nfunction App() {\n\tconst dispatch = useDispatch();\n\tconst [collapsed, setCollapse] = useState(false);\n\n\tuseEffect(() => {\n\t\tdispatch(getCategoriesTC());\n\t}, [dispatch]);\n\n\n\tuseEffect(() => {\n\t\tdispatch(getShortPostsTC());\n\t}, [dispatch]);\n\n\treturn (\n\n\t\t<Layout>\n\t\t\t<Header>\n\t\t\t\t<HeaderNavBar />\n\t\t\t</Header>\n\t\t\t<Layout >\n\t\t\t\t<Sider width={200} className=\"site-layout-background\" collapsed={collapsed} collapsible onCollapse={() => setCollapse(!collapsed)}>\n\t\t\t\t\t<MenuBar />\n\n\t\t\t\t</Sider>\n\t\t\t\t<Layout style={{ padding: '0 24px 24px' }}>\n\n\t\t\t\t\t<Content\n\t\t\t\t\t\tclassName=\"site-layout-background\"\n\t\t\t\t\t\tstyle={{\n\t\t\t\t\t\t\tpadding: 24,\n\t\t\t\t\t\t\tmargin: 0,\n\t\t\t\t\t\t\tminHeight: 280,\n\t\t\t\t\t\t}}\n\t\t\t\t\t>\n\t\t\t\t\t\t<Switch>\n\t\t\t\t\t\t\t<Route exact path=\"/main/:id?\" render={() => <MainWindow />} />\n\t\t\t\t\t\t\t<Route exact path=\"/admin\" render={() => <Admin />} />\n\t\t\t\t\t\t\t<Route render={() => <Login />} path=\"/login\" />\n\t\t\t\t\t\t\t<Route render={() => <Greeting />} path=\"/\" />\n\t\t\t\t\t\t\t<Route render={() => <Empty image={Empty.PRESENTED_IMAGE_SIMPLE} style={{ height: \"90vh\" }} />} path=\"*\" />\n\n\t\t\t\t\t\t</Switch>\n\t\t\t\t\t</Content>\n\t\t\t\t</Layout>\n\t\t\t</Layout>\n\t\t</Layout>\n\n\t);\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import { applyMiddleware, combineReducers, createStore } from \"redux\";\nimport { categoriesReducer } from \"./categoriesReducer\";\nimport { postsReducer } from \"./postsReducer\";\nimport thunk from 'redux-thunk';\nimport { appReducer } from './appReducer';\nimport { filterReducer } from './filterReducer';\n\nconst rootReducer = combineReducers({\n    categories: categoriesReducer,\n\tposts: postsReducer,\n\tfilter: filterReducer,\n\tapp: appReducer\n\n});\n\nexport const store = createStore(rootReducer, applyMiddleware(thunk));\n\nexport type AppStateType = ReturnType<typeof rootReducer>","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { Provider } from 'react-redux';\nimport { store } from './redux/store'\nimport { BrowserRouter } from 'react-router-dom';\n\nReactDOM.render(\n\t<Provider store={store}>\n\t\t<BrowserRouter>\n\t\t\t<App />\n\t\t</BrowserRouter>\n\t</Provider>,\n\n\tdocument.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"AdminForm_form__uj-lA\",\"fields\":\"AdminForm_fields__3yaux\",\"postsFields\":\"AdminForm_postsFields__2YPAC\",\"categoryFields\":\"AdminForm_categoryFields__3t7Q8\",\"addCategory\":\"AdminForm_addCategory__3TF29\",\"createArea\":\"AdminForm_createArea__2u8_m\",\"btn\":\"AdminForm_btn__2S7st\",\"topActions\":\"AdminForm_topActions__2LNlC\"};"],"sourceRoot":""}